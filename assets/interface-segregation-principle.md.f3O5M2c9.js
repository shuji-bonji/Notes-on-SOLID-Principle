import{_ as r,C as E,c as d,o as l,a2 as t,b as e,j as a,w as i,a as n,G as p,a3 as k}from"./chunks/framework.M5Qft685.js";const u=JSON.parse('{"title":"インターフェース分離の原則 (Interface Segregation Principle)","description":"","frontmatter":{},"headers":[],"relativePath":"interface-segregation-principle.md","filePath":"interface-segregation-principle.md"}'),g={name:"interface-segregation-principle.md"};function c(F,s,o,y,A,C){const h=E("Mermaid");return l(),d("div",null,[s[3]||(s[3]=t('<h1 id="インターフェース分離の原則-interface-segregation-principle" tabindex="-1">インターフェース分離の原則 (Interface Segregation Principle) <a class="header-anchor" href="#インターフェース分離の原則-interface-segregation-principle" aria-label="Permalink to &quot;インターフェース分離の原則 (Interface Segregation Principle)&quot;">​</a></h1><h2 id="インターフェース分離の原則とは" tabindex="-1">インターフェース分離の原則とは <a class="header-anchor" href="#インターフェース分離の原則とは" aria-label="Permalink to &quot;インターフェース分離の原則とは&quot;">​</a></h2><p><strong>インターフェースのクライアントにとって利用しないフィールドやメソッドへの依存を矯正してはならない。</strong></p><p>インターフェースや抽象クラスの抽象メソッドは未実装のままではエラーとなり、サブクラスでの実装を強制することができる。 だが、実装クラスに関係ないメソッドがあったしても実装しなければいけない。</p><p>➡️ インターフェースに用意されている<strong>不必要なフィールドやメソッドにクライアントが依存しなくてもいいようにインターフェースは適切に分割すべき</strong></p><h2 id="インターフェース分離の原則に違反した例" tabindex="-1">インターフェース分離の原則に違反した例 <a class="header-anchor" href="#インターフェース分離の原則に違反した例" aria-label="Permalink to &quot;インターフェース分離の原則に違反した例&quot;">​</a></h2><p>たとえば「多機能プリンタ」を考えてみましょう。<br> 印刷・スキャン・FAX の機能をすべて持つ <code>MultiFunctionDevice</code> インターフェースを定義し、それをすべてのプリンタに強制している例です。</p><h4 id="クラス図" tabindex="-1">クラス図 <a class="header-anchor" href="#クラス図" aria-label="Permalink to &quot;クラス図&quot;">​</a></h4>',8)),(l(),e(k,null,{default:i(()=>[p(h,{id:"mermaid-24",class:"mermaid",graph:"classDiagram%0A%20%20class%20MultiFunctionDevice%20%7B%0A%20%20%20%20%3C%3Cinterface%3E%3E%0A%20%20%20%20%2Bprint()%0A%20%20%20%20%2Bscan()%0A%20%20%20%20%2Bfax()%0A%20%20%7D%0A%0A%20%20class%20AllInOnePrinter%20%7B%0A%20%20%20%20%2Bprint()%0A%20%20%20%20%2Bscan()%0A%20%20%20%20%2Bfax()%0A%20%20%7D%0A%0A%20%20class%20SimplePrinter%20%7B%0A%20%20%20%20%2Bprint()%0A%20%20%20%20%2Bscan()%0A%20%20%20%20%2Bfax()%0A%20%20%7D%0A%0A%20%20MultiFunctionDevice%20%3C%7C..%20AllInOnePrinter%0A%20%20MultiFunctionDevice%20%3C%7C..%20SimplePrinter%0A"})]),fallback:i(()=>s[0]||(s[0]=[n(" Loading... ")])),_:1})),s[4]||(s[4]=t(`<h4 id="コード" tabindex="-1">コード <a class="header-anchor" href="#コード" aria-label="Permalink to &quot;コード&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MultiFunctionDevice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AllInOnePrinter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MultiFunctionDevice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;印刷しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;スキャンしました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;FAXを送信しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimplePrinter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MultiFunctionDevice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;印刷しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;このプリンタはスキャンできません&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;このプリンタはFAXできません&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="❌-問題点" tabindex="-1">❌ 問題点 <a class="header-anchor" href="#❌-問題点" aria-label="Permalink to &quot;❌ 問題点&quot;">​</a></h3><ul><li><code>SimplePrinter</code> はスキャンもFAXもできないのに、無理やり実装を強制されている</li><li>利用者も「使えない機能」を見えてしまう</li><li>将来の変更時に、関係のない機能まで対応を強いられる</li></ul><h2 id="原則に違反するとどうなるか" tabindex="-1">原則に違反するとどうなるか <a class="header-anchor" href="#原則に違反するとどうなるか" aria-label="Permalink to &quot;原則に違反するとどうなるか&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimplePrinter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">printer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 実行時にエラー</span></span></code></pre></div><ul><li>クライアントコードが「スキャンできる」と誤解して使ってしまう</li><li>実行時エラーの原因となり、信頼性を損なう</li></ul><h2 id="解決策-機能ごとにインターフェースを分割する" tabindex="-1">解決策：機能ごとにインターフェースを分割する <a class="header-anchor" href="#解決策-機能ごとにインターフェースを分割する" aria-label="Permalink to &quot;解決策：機能ごとにインターフェースを分割する&quot;">​</a></h2><h4 id="クラス図-1" tabindex="-1">クラス図 <a class="header-anchor" href="#クラス図-1" aria-label="Permalink to &quot;クラス図&quot;">​</a></h4>`,9)),(l(),e(k,null,{default:i(()=>[p(h,{id:"mermaid-71",class:"mermaid",graph:"classDiagram%0A%20%20class%20Printer%20%7B%0A%20%20%20%20%3C%3Cinterface%3E%3E%0A%20%20%20%20%2Bprint()%0A%20%20%7D%0A%0A%20%20class%20Scanner%20%7B%0A%20%20%20%20%3C%3Cinterface%3E%3E%0A%20%20%20%20%2Bscan()%0A%20%20%7D%0A%0A%20%20class%20Fax%20%7B%0A%20%20%20%20%3C%3Cinterface%3E%3E%0A%20%20%20%20%2Bfax()%0A%20%20%7D%0A%0A%20%20class%20AllInOnePrinter%20%7B%0A%20%20%20%20%2Bprint()%0A%20%20%20%20%2Bscan()%0A%20%20%20%20%2Bfax()%0A%20%20%7D%0A%0A%20%20class%20SimplePrinter%20%7B%0A%20%20%20%20%2Bprint()%0A%20%20%7D%0A%0A%20%20Printer%20%3C%7C..%20AllInOnePrinter%0A%20%20Scanner%20%3C%7C..%20AllInOnePrinter%0A%20%20Fax%20%3C%7C..%20AllInOnePrinter%0A%20%20Printer%20%3C%7C..%20SimplePrinter%0A"})]),fallback:i(()=>s[1]||(s[1]=[n(" Loading... ")])),_:1})),s[5]||(s[5]=t(`<h4 id="コード-1" tabindex="-1">コード <a class="header-anchor" href="#コード-1" aria-label="Permalink to &quot;コード&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Printer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Scanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AllInOnePrinter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Printer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Scanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;印刷しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;スキャンしました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()   { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;FAXを送信しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimplePrinter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Printer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;印刷しました&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>このように分離することで、「必要な機能だけ」を実装し、「必要なインターフェースだけ」に依存できるようになります。</p><p>→ インターフェース分離の原則に準拠した設計になります。</p><h2 id="他のsolid原則との関連" tabindex="-1">他のSOLID原則との関連 <a class="header-anchor" href="#他のsolid原則との関連" aria-label="Permalink to &quot;他のSOLID原則との関連&quot;">​</a></h2><h4 id="関連図" tabindex="-1">関連図 <a class="header-anchor" href="#関連図" aria-label="Permalink to &quot;関連図&quot;">​</a></h4>`,6)),(l(),e(k,null,{default:i(()=>[p(h,{id:"mermaid-88",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20I%5B%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9%E5%88%86%E9%9B%A2%E3%81%AE%E5%8E%9F%E5%89%87%5D%20--%3E%20D%5B%E4%BE%9D%E5%AD%98%E6%80%A7%E9%80%86%E8%BB%A2%E3%81%AE%E5%8E%9F%E5%89%87%5D%0A%20%20%20%20subgraph%20%22%E7%96%8E%E7%B5%90%E5%90%88%22%0A%20%20%20%20%20%20%20%20I%0A%20%20%20%20%20%20%20%20D%0A%20%20%20%20end%0A"})]),fallback:i(()=>s[2]||(s[2]=[n(" Loading... ")])),_:1})),s[6]||(s[6]=a("ul",null,[a("li",null,[a("strong",null,"依存性逆転の原則（DIP）"),n(" では、具象クラスではなく抽象に依存する設計が求められます。 その際、インターフェースが肥大化していると、利用者に不要な依存を強制することになります。")]),a("li",null,[a("strong",null,"インターフェース分離の原則（ISP）"),n(" を適用することで、必要最小限のインターフェースに依存できるようになり、DIPの柔軟性と保守性をさらに高めます。")])],-1))])}const m=r(g,[["render",c]]);export{u as __pageData,m as default};
