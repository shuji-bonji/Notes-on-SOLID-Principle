import{_ as i,c as a,o as n,a2 as t}from"./chunks/framework.M5Qft685.js";const E=JSON.parse('{"title":"依存性逆転の原則（DIP）におけるOOPとFPの比較","description":"依存性逆転の原則（DIP）をOOPと関数型で比較。インターフェース注入と高階関数、それぞれの依存管理手法でテスト容易性と柔軟性を実現する設計を学びます。","frontmatter":{"description":"依存性逆転の原則（DIP）をOOPと関数型で比較。インターフェース注入と高階関数、それぞれの依存管理手法でテスト容易性と柔軟性を実現する設計を学びます。"},"headers":[],"relativePath":"object-oriented-vs-functional/dip-oop-vs-fp.md","filePath":"object-oriented-vs-functional/dip-oop-vs-fp.md"}'),h={name:"object-oriented-vs-functional/dip-oop-vs-fp.md"};function l(p,s,k,e,d,r){return n(),a("div",null,s[0]||(s[0]=[t("",13)]))}const o=i(h,[["render",l]]);export{E as __pageData,o as default};
