import{_ as i,c as a,o as l,a2 as t}from"./chunks/framework.M5Qft685.js";const r="/Notes-on-SOLID-Principle/images/solid.svg",_=JSON.parse('{"title":"SOLIDの原則","description":"","frontmatter":{"title":"SOLIDの原則"},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),n={name:"index.md"};function s(o,e,h,c,p,d){return l(),a("div",null,e[0]||(e[0]=[t('<h1 id="📘solidの原則" tabindex="-1">📘SOLIDの原則 <a class="header-anchor" href="#📘solidの原則" aria-label="Permalink to &quot;📘SOLIDの原則&quot;">​</a></h1><p>このサイトは、SOLID原則を具体例と共に解説し、実践的な理解を促すことを目的としています。</p><ul><li><a href="./solid-principles.html">SOLIDの原則とは？</a></li></ul><img src="'+r+'" alt="SOLIDの図" style="width:290px;height:210px;margin:auto;"><h2 id="🔎-各原則の一覧" tabindex="-1">🔎 各原則の一覧 <a class="header-anchor" href="#🔎-各原則の一覧" aria-label="Permalink to &quot;🔎 各原則の一覧&quot;">​</a></h2><ul><li><a href="./single-responsibility-principle.html">単一責任の原則（SRP）</a></li><li><a href="./open-closed-principle.html">オープンクローズドの原則（OCP）</a></li><li><a href="./liskov-substitution-principle.html">リスコフの置換原則（LSP）</a></li><li><a href="./interface-segregation-principle.html">インターフェース分離の原則（ISP）</a></li><li><a href="./dependency-inversion-principle.html">依存性逆転の原則（DIP）</a></li></ul><hr><p>✅<a href="./solid-checklist.html">実装チェックリスト</a></p><h2 id="🛠-ケーススタディ" tabindex="-1">🛠 ケーススタディ <a class="header-anchor" href="#🛠-ケーススタディ" aria-label="Permalink to &quot;🛠 ケーススタディ&quot;">​</a></h2><ul><li><a href="./practical-case-studies.html">ECサイトの責務分離と拡張設計</a></li></ul>',10)]))}const u=i(n,[["render",s]]);export{_ as __pageData,u as default};
