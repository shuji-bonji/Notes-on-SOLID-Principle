const i='{"documentCount":144,"nextId":144,"documentIds":{"0":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#依存性逆転の原則-dependency-inversion-principle","1":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#依存性逆転の原則とは","2":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#依存性逆転の原則に違反している例","3":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#クラス図","4":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#コード","5":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#❌-問題点","6":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#原則に違反するとどうなるか","7":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#解決策-抽象に依存する","8":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#クラス図-1","9":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#コード-1","10":"/Notes-on-SOLID-Principle/dependency-inversion-principle.html#✅-利点","11":"/Notes-on-SOLID-Principle/#📘solidの原則","12":"/Notes-on-SOLID-Principle/#🔎-各原則の一覧","13":"/Notes-on-SOLID-Principle/#🛠-ケーススタディ","14":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#インターフェース分離の原則-interface-segregation-principle","15":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#インターフェース分離の原則とは","16":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#インターフェース分離の原則に違反した例","17":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#クラス図","18":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#コード","19":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#❌-問題点","20":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#原則に違反するとどうなるか","21":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#解決策-機能ごとにインターフェースを分割する","22":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#クラス図-1","23":"/Notes-on-SOLID-Principle/interface-segregation-principle.html#コード-1","24":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#リスコフの置換原則-liskov-substitution-principle","25":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#リスコフの置換原則とは","26":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#クラス図","27":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#リスコフの置換原則に違反した例","28":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#クラス図-1","29":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#コード","30":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#❌-問題点","31":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#原則に違反するとどうなるか","32":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#解決策-共通の動作に着目したインターフェースを使う","33":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#クラス図-2","34":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#コード-1","35":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#リスコフの置換原則に違反するとどうなるか","36":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#振る舞いの変更に気付くには","37":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#コード-2","38":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#テストコード","39":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#補足-契約による設計","40":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#事前条件とは","41":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#事後条件とは","42":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#契約による設計においての、サブタイプの事前条件と事後条件","43":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#事前条件はスーパータイプと同じかそれより弱い条件","44":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#スーパータイプ","45":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#サブタイプ","46":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#事後条件はスーパータイプと同じかそれより強い条件","47":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#スーパータイプ-1","48":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#サブタイプ-1","49":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#tyepscriptコード例","50":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#クラス図-3","51":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#違反例","52":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#コード-3","53":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#実行結果","54":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#ユニットテスト","55":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#実行結果-1","56":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#解決策","57":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#クラス図-4","58":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#コード-4","59":"/Notes-on-SOLID-Principle/liskov-substitution-principle.html#実行結果-2","60":"/Notes-on-SOLID-Principle/open-closed-principle.html#オープンクローズドの原則-open-closed-principle","61":"/Notes-on-SOLID-Principle/open-closed-principle.html#この原則の要点","62":"/Notes-on-SOLID-Principle/open-closed-principle.html#この原則が解決する問題","63":"/Notes-on-SOLID-Principle/open-closed-principle.html#原則に違反した例","64":"/Notes-on-SOLID-Principle/open-closed-principle.html#クラス図","65":"/Notes-on-SOLID-Principle/open-closed-principle.html#コード","66":"/Notes-on-SOLID-Principle/open-closed-principle.html#❌-問題点-原則に違反","67":"/Notes-on-SOLID-Principle/open-closed-principle.html#原則違反のリスク","68":"/Notes-on-SOLID-Principle/open-closed-principle.html#解決策-通知手段を拡張できる設計にする","69":"/Notes-on-SOLID-Principle/open-closed-principle.html#クラス図-1","70":"/Notes-on-SOLID-Principle/open-closed-principle.html#コード-1","71":"/Notes-on-SOLID-Principle/open-closed-principle.html#✅-利点","72":"/Notes-on-SOLID-Principle/open-closed-principle.html#クラス図-2","73":"/Notes-on-SOLID-Principle/open-closed-principle.html#コード-2","74":"/Notes-on-SOLID-Principle/open-closed-principle.html#実務で役立つヒント","75":"/Notes-on-SOLID-Principle/open-closed-principle.html#他のsolid原則との関連","76":"/Notes-on-SOLID-Principle/open-closed-principle.html#まとめ","77":"/Notes-on-SOLID-Principle/practical-case-studies.html#solid原則ケーススタディ-ecサイト機能拡張","78":"/Notes-on-SOLID-Principle/practical-case-studies.html#シナリオ","79":"/Notes-on-SOLID-Principle/practical-case-studies.html#非solidなコード-before","80":"/Notes-on-SOLID-Principle/practical-case-studies.html#クラス図","81":"/Notes-on-SOLID-Principle/practical-case-studies.html#コード","82":"/Notes-on-SOLID-Principle/practical-case-studies.html#solid原則に準拠したリファクタリング-after","83":"/Notes-on-SOLID-Principle/practical-case-studies.html#✅-単一責任の原則-srp","84":"/Notes-on-SOLID-Principle/practical-case-studies.html#クラス図-1","85":"/Notes-on-SOLID-Principle/practical-case-studies.html#コード-1","86":"/Notes-on-SOLID-Principle/practical-case-studies.html#✅-オープンクローズド原則-ocp-リスコフの置換原則-lsp","87":"/Notes-on-SOLID-Principle/practical-case-studies.html#クラス図-2","88":"/Notes-on-SOLID-Principle/practical-case-studies.html#コード-2","89":"/Notes-on-SOLID-Principle/practical-case-studies.html#✅-インターフェース分離の原則-isp","90":"/Notes-on-SOLID-Principle/practical-case-studies.html#クラス図-3","91":"/Notes-on-SOLID-Principle/practical-case-studies.html#コード-3","92":"/Notes-on-SOLID-Principle/practical-case-studies.html#✅-依存性逆転の原則-dip","93":"/Notes-on-SOLID-Principle/practical-case-studies.html#クラス図-4","94":"/Notes-on-SOLID-Principle/practical-case-studies.html#コード-4","95":"/Notes-on-SOLID-Principle/practical-case-studies.html#✅-この設計の利点","96":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#単一責任の原則-single-responsibility-principle","97":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#単一責任の原則とは","98":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#なぜ「アクター」の観点が重要か","99":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#アクターとは","100":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#🔎-例-srp違反の構造","101":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#単一責任に違反している例","102":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#クラス図","103":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#コード","104":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#問題点","105":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#状態-フィールド-も責任に含まれる","106":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#原則に違反するとどうなるか","107":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#解決策-責任を分離する","108":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#クラス図-1","109":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#コード-1","110":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#責任の分離の判断基準-リファクタリング時の指針","111":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#実行例","112":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#補足-dry原則との関係","113":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#❌-よくある誤解","114":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#クラス図-2","115":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#コード-2","116":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#✅-正しい構成例-責任の分離","117":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#クラス図-3","118":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#コード-3","119":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#実行例-1","120":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#補足-インターフェースを使った責任の分離-typescript","121":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#クラス図-4","122":"/Notes-on-SOLID-Principle/single-responsibility-principle.html#コード-4","123":"/Notes-on-SOLID-Principle/solid-checklist.html#実装チェックリスト","124":"/Notes-on-SOLID-Principle/solid-checklist.html#各原則のチェックリスト-コードレビュー時の確認用","125":"/Notes-on-SOLID-Principle/solid-checklist.html#☑︎-単一責任の原則-srp","126":"/Notes-on-SOLID-Principle/solid-checklist.html#☑︎-オープンクローズドの原則-ocp","127":"/Notes-on-SOLID-Principle/solid-checklist.html#☑︎-リスコフの置換原則-lsp","128":"/Notes-on-SOLID-Principle/solid-checklist.html#☑︎-インターフェース分離の原則-isp","129":"/Notes-on-SOLID-Principle/solid-checklist.html#☑︎-依存性逆転の原則-dip","130":"/Notes-on-SOLID-Principle/solid-checklist.html#詳細チェック","131":"/Notes-on-SOLID-Principle/solid-checklist.html#🔍-単一責任の原則-srp-詳細チェック","132":"/Notes-on-SOLID-Principle/solid-checklist.html#🔍-オープンクローズドの原則-ocp-詳細チェック","133":"/Notes-on-SOLID-Principle/solid-checklist.html#🔍-リスコフの置換原則-lsp-詳細チェック","134":"/Notes-on-SOLID-Principle/solid-checklist.html#🔍-インターフェース分離の原則-isp-詳細チェック","135":"/Notes-on-SOLID-Principle/solid-checklist.html#🔍-依存性逆転の原則-dip-詳細チェック","136":"/Notes-on-SOLID-Principle/solid-principles.html#solid原則とは","137":"/Notes-on-SOLID-Principle/solid-principles.html#なぜsolidが必要なのか","138":"/Notes-on-SOLID-Principle/solid-principles.html#solid原則を適用するメリット","139":"/Notes-on-SOLID-Principle/solid-principles.html#👎-非solidなコードの問題点","140":"/Notes-on-SOLID-Principle/solid-principles.html#👍-solidなコードのメリット","141":"/Notes-on-SOLID-Principle/solid-principles.html#solid原則間の関連性","142":"/Notes-on-SOLID-Principle/solid-principles.html#solid原則の関連性","143":"/Notes-on-SOLID-Principle/solid-principles.html#学習を深めるためのリソース"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[5,1,1],"1":[1,5,8],"2":[1,5,6],"3":[1,5,2],"4":[1,5,20],"5":[2,5,7],"6":[1,5,14],"7":[2,5,1],"8":[1,8,2],"9":[1,8,23],"10":[2,6,9],"11":[1,1,5],"12":[2,1,11],"13":[2,1,2],"14":[5,1,1],"15":[1,5,8],"16":[1,5,11],"17":[1,5,2],"18":[1,5,21],"19":[2,5,9],"20":[1,5,13],"21":[2,5,1],"22":[1,8,2],"23":[1,8,26],"24":[5,1,1],"25":[1,5,10],"26":[1,5,2],"27":[1,5,10],"28":[1,5,2],"29":[1,5,12],"30":[2,5,14],"31":[1,5,20],"32":[2,5,10],"33":[1,8,2],"34":[1,8,22],"35":[1,5,11],"36":[1,5,2],"37":[1,7,15],"38":[1,7,21],"39":[2,5,4],"40":[1,6,4],"41":[1,6,4],"42":[2,6,3],"43":[1,6,1],"44":[1,7,7],"45":[1,7,14],"46":[1,6,1],"47":[1,7,13],"48":[1,7,15],"49":[1,5,1],"50":[1,6,1],"51":[1,5,2],"52":[1,6,30],"53":[1,7,5],"54":[1,6,25],"55":[1,7,5],"56":[1,5,1],"57":[1,6,2],"58":[1,6,33],"59":[1,7,3],"60":[5,1,1],"61":[1,5,8],"62":[1,5,5],"63":[1,5,5],"64":[1,5,2],"65":[1,5,20],"66":[4,5,7],"67":[1,5,20],"68":[2,5,4],"69":[1,10,2],"70":[1,10,28],"71":[2,6,12],"72":[1,8,2],"73":[1,8,24],"74":[1,5,13],"75":[1,5,11],"76":[1,5,7],"77":[2,1,1],"78":[1,2,5],"79":[3,2,1],"80":[1,5,2],"81":[1,5,29],"82":[3,2,1],"83":[4,5,1],"84":[1,8,2],"85":[1,8,21],"86":[6,5,1],"87":[1,10,2],"88":[1,10,23],"89":[4,5,1],"90":[1,8,2],"91":[1,8,14],"92":[4,5,1],"93":[1,8,2],"94":[1,8,27],"95":[2,2,12],"96":[5,1,1],"97":[1,5,46],"98":[4,5,29],"99":[2,8,39],"100":[3,8,16],"101":[1,5,5],"102":[1,8,2],"103":[1,8,21],"104":[1,5,11],"105":[3,5,21],"106":[1,5,51],"107":[2,5,1],"108":[1,7,2],"109":[1,7,25],"110":[3,5,10],"111":[1,7,19],"112":[2,5,13],"113":[2,6,4],"114":[1,8,2],"115":[1,8,30],"116":[3,6,1],"117":[1,9,2],"118":[1,9,33],"119":[1,9,19],"120":[4,5,4],"121":[1,10,2],"122":[1,10,21],"123":[1,1,1],"124":[3,1,1],"125":[4,4,3],"126":[4,4,3],"127":[4,4,3],"128":[4,4,3],"129":[4,4,6],"130":[1,1,1],"131":[4,2,7],"132":[4,2,10],"133":[4,2,6],"134":[4,2,6],"135":[4,2,9],"136":[1,1,46],"137":[2,1,7],"138":[1,1,3],"139":[2,2,11],"140":[2,2,10],"141":[1,1,10],"142":[1,2,2],"143":[1,1,32]},"averageFieldLength":[1.7569444444444442,5.215277777777778,10.152777777777784],"storedFields":{"0":{"title":"依存性逆転の原則 (Dependency Inversion Principle)","titles":[]},"1":{"title":"依存性逆転の原則とは","titles":["依存性逆転の原則 (Dependency Inversion Principle)"]},"2":{"title":"依存性逆転の原則に違反している例","titles":["依存性逆転の原則 (Dependency Inversion Principle)"]},"3":{"title":"クラス図","titles":["依存性逆転の原則 (Dependency Inversion Principle)","依存性逆転の原則に違反している例"]},"4":{"title":"コード","titles":["依存性逆転の原則 (Dependency Inversion Principle)","依存性逆転の原則に違反している例"]},"5":{"title":"❌ 問題点","titles":["依存性逆転の原則 (Dependency Inversion Principle)","依存性逆転の原則に違反している例"]},"6":{"title":"原則に違反するとどうなるか","titles":["依存性逆転の原則 (Dependency Inversion Principle)"]},"7":{"title":"解決策：抽象に依存する","titles":["依存性逆転の原則 (Dependency Inversion Principle)"]},"8":{"title":"クラス図","titles":["依存性逆転の原則 (Dependency Inversion Principle)","解決策：抽象に依存する","❌ 問題点"]},"9":{"title":"コード","titles":["依存性逆転の原則 (Dependency Inversion Principle)","解決策：抽象に依存する","❌ 問題点"]},"10":{"title":"✅ 利点","titles":["依存性逆転の原則 (Dependency Inversion Principle)","解決策：抽象に依存する"]},"11":{"title":"📘SOLIDの原則","titles":[]},"12":{"title":"🔎 各原則の一覧","titles":["📘SOLIDの原則"]},"13":{"title":"🛠 ケーススタディ","titles":["📘SOLIDの原則"]},"14":{"title":"インターフェース分離の原則 (Interface Segregation Principle)","titles":[]},"15":{"title":"インターフェース分離の原則とは","titles":["インターフェース分離の原則 (Interface Segregation Principle)"]},"16":{"title":"インターフェース分離の原則に違反した例","titles":["インターフェース分離の原則 (Interface Segregation Principle)"]},"17":{"title":"クラス図","titles":["インターフェース分離の原則 (Interface Segregation Principle)","インターフェース分離の原則に違反した例"]},"18":{"title":"コード","titles":["インターフェース分離の原則 (Interface Segregation Principle)","インターフェース分離の原則に違反した例"]},"19":{"title":"❌ 問題点","titles":["インターフェース分離の原則 (Interface Segregation Principle)","インターフェース分離の原則に違反した例"]},"20":{"title":"原則に違反するとどうなるか","titles":["インターフェース分離の原則 (Interface Segregation Principle)"]},"21":{"title":"解決策：機能ごとにインターフェースを分割する","titles":["インターフェース分離の原則 (Interface Segregation Principle)"]},"22":{"title":"クラス図","titles":["インターフェース分離の原則 (Interface Segregation Principle)","解決策：機能ごとにインターフェースを分割する","❌ 問題点"]},"23":{"title":"コード","titles":["インターフェース分離の原則 (Interface Segregation Principle)","解決策：機能ごとにインターフェースを分割する","❌ 問題点"]},"24":{"title":"リスコフの置換原則 (Liskov Substitution Principle)","titles":[]},"25":{"title":"リスコフの置換原則とは","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"26":{"title":"クラス図","titles":["リスコフの置換原則 (Liskov Substitution Principle)","リスコフの置換原則とは"]},"27":{"title":"リスコフの置換原則に違反した例","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"28":{"title":"クラス図","titles":["リスコフの置換原則 (Liskov Substitution Principle)","リスコフの置換原則に違反した例"]},"29":{"title":"コード","titles":["リスコフの置換原則 (Liskov Substitution Principle)","リスコフの置換原則に違反した例"]},"30":{"title":"❌ 問題点","titles":["リスコフの置換原則 (Liskov Substitution Principle)","リスコフの置換原則に違反した例"]},"31":{"title":"原則に違反するとどうなるか","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"32":{"title":"解決策：共通の動作に着目したインターフェースを使う","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"33":{"title":"クラス図","titles":["リスコフの置換原則 (Liskov Substitution Principle)","解決策：共通の動作に着目したインターフェースを使う","❌ 問題点"]},"34":{"title":"コード","titles":["リスコフの置換原則 (Liskov Substitution Principle)","解決策：共通の動作に着目したインターフェースを使う","❌ 問題点"]},"35":{"title":"リスコフの置換原則に違反するとどうなるか","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"36":{"title":"振る舞いの変更に気付くには","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"37":{"title":"コード","titles":["リスコフの置換原則 (Liskov Substitution Principle)","振る舞いの変更に気付くには","❌ 問題点"]},"38":{"title":"テストコード","titles":["リスコフの置換原則 (Liskov Substitution Principle)","振る舞いの変更に気付くには","❌ 問題点"]},"39":{"title":"補足： 契約による設計","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"40":{"title":"事前条件とは","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計"]},"41":{"title":"事後条件とは","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計"]},"42":{"title":"契約による設計においての、サブタイプの事前条件と事後条件","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計"]},"43":{"title":"事前条件はスーパータイプと同じかそれより弱い条件","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計"]},"44":{"title":"スーパータイプ","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計","事前条件はスーパータイプと同じかそれより弱い条件"]},"45":{"title":"サブタイプ","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計","事前条件はスーパータイプと同じかそれより弱い条件"]},"46":{"title":"事後条件はスーパータイプと同じかそれより強い条件","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計"]},"47":{"title":"スーパータイプ","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計","事後条件はスーパータイプと同じかそれより強い条件"]},"48":{"title":"サブタイプ","titles":["リスコフの置換原則 (Liskov Substitution Principle)","補足： 契約による設計","事後条件はスーパータイプと同じかそれより強い条件"]},"49":{"title":"TyepScriptコード例","titles":["リスコフの置換原則 (Liskov Substitution Principle)"]},"50":{"title":"クラス図","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","事後条件はスーパータイプと同じかそれより強い条件"]},"51":{"title":"違反例","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例"]},"52":{"title":"コード","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","違反例"]},"53":{"title":"実行結果","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","違反例","コード"]},"54":{"title":"ユニットテスト","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","違反例"]},"55":{"title":"実行結果","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","違反例","ユニットテスト"]},"56":{"title":"解決策","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例"]},"57":{"title":"クラス図","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","解決策"]},"58":{"title":"コード","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","解決策"]},"59":{"title":"実行結果","titles":["リスコフの置換原則 (Liskov Substitution Principle)","TyepScriptコード例","解決策","コード"]},"60":{"title":"オープンクローズドの原則 (Open-Closed Principle)","titles":[]},"61":{"title":"この原則の要点","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"62":{"title":"この原則が解決する問題","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"63":{"title":"原則に違反した例","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"64":{"title":"クラス図","titles":["オープンクローズドの原則 (Open-Closed Principle)","原則に違反した例"]},"65":{"title":"コード","titles":["オープンクローズドの原則 (Open-Closed Principle)","原則に違反した例"]},"66":{"title":"❌ 問題点（原則に違反）","titles":["オープンクローズドの原則 (Open-Closed Principle)","原則に違反した例"]},"67":{"title":"原則違反のリスク","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"68":{"title":"解決策：通知手段を拡張できる設計にする","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"69":{"title":"クラス図","titles":["オープンクローズドの原則 (Open-Closed Principle)","解決策：通知手段を拡張できる設計にする","❌ 問題点（原則に違反）"]},"70":{"title":"コード","titles":["オープンクローズドの原則 (Open-Closed Principle)","解決策：通知手段を拡張できる設計にする","❌ 問題点（原則に違反）"]},"71":{"title":"✅ 利点","titles":["オープンクローズドの原則 (Open-Closed Principle)","解決策：通知手段を拡張できる設計にする"]},"72":{"title":"クラス図","titles":["オープンクローズドの原則 (Open-Closed Principle)","解決策：通知手段を拡張できる設計にする","✅ 利点"]},"73":{"title":"コード","titles":["オープンクローズドの原則 (Open-Closed Principle)","解決策：通知手段を拡張できる設計にする","✅ 利点"]},"74":{"title":"実務で役立つヒント","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"75":{"title":"他のSOLID原則との関連","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"76":{"title":"まとめ","titles":["オープンクローズドの原則 (Open-Closed Principle)"]},"77":{"title":"SOLID原則ケーススタディ：ECサイト機能拡張","titles":[]},"78":{"title":"シナリオ","titles":["SOLID原則ケーススタディ：ECサイト機能拡張"]},"79":{"title":"非SOLIDなコード（Before）","titles":["SOLID原則ケーススタディ：ECサイト機能拡張"]},"80":{"title":"クラス図","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","非SOLIDなコード（Before）"]},"81":{"title":"コード","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","非SOLIDなコード（Before）"]},"82":{"title":"SOLID原則に準拠したリファクタリング（After）","titles":["SOLID原則ケーススタディ：ECサイト機能拡張"]},"83":{"title":"✅ 単一責任の原則（SRP）","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）"]},"84":{"title":"クラス図","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ 単一責任の原則（SRP）"]},"85":{"title":"コード","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ 単一責任の原則（SRP）"]},"86":{"title":"✅ オープンクローズド原則（OCP）＋リスコフの置換原則（LSP）","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）"]},"87":{"title":"クラス図","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ オープンクローズド原則（OCP）＋リスコフの置換原則（LSP）"]},"88":{"title":"コード","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ オープンクローズド原則（OCP）＋リスコフの置換原則（LSP）"]},"89":{"title":"✅ インターフェース分離の原則（ISP）","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）"]},"90":{"title":"クラス図","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ インターフェース分離の原則（ISP）"]},"91":{"title":"コード","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ インターフェース分離の原則（ISP）"]},"92":{"title":"✅ 依存性逆転の原則（DIP）","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）"]},"93":{"title":"クラス図","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ 依存性逆転の原則（DIP）"]},"94":{"title":"コード","titles":["SOLID原則ケーススタディ：ECサイト機能拡張","SOLID原則に準拠したリファクタリング（After）","✅ 依存性逆転の原則（DIP）"]},"95":{"title":"✅ この設計の利点","titles":["SOLID原則ケーススタディ：ECサイト機能拡張"]},"96":{"title":"単一責任の原則 (Single Responsibility Principle)","titles":[]},"97":{"title":"単一責任の原則とは","titles":["単一責任の原則 (Single Responsibility Principle)"]},"98":{"title":"なぜ「アクター」の観点が重要か？","titles":["単一責任の原則 (Single Responsibility Principle)"]},"99":{"title":"アクターとは？","titles":["単一責任の原則 (Single Responsibility Principle)","なぜ「アクター」の観点が重要か？"]},"100":{"title":"🔎 例：SRP違反の構造","titles":["単一責任の原則 (Single Responsibility Principle)","なぜ「アクター」の観点が重要か？"]},"101":{"title":"単一責任に違反している例","titles":["単一責任の原則 (Single Responsibility Principle)"]},"102":{"title":"クラス図","titles":["単一責任の原則 (Single Responsibility Principle)","単一責任に違反している例","🔎 例：SRP違反の構造"]},"103":{"title":"コード","titles":["単一責任の原則 (Single Responsibility Principle)","単一責任に違反している例","🔎 例：SRP違反の構造"]},"104":{"title":"問題点","titles":["単一責任の原則 (Single Responsibility Principle)","単一責任に違反している例"]},"105":{"title":"状態（フィールド）も責任に含まれる","titles":["単一責任の原則 (Single Responsibility Principle)"]},"106":{"title":"原則に違反するとどうなるか","titles":["単一責任の原則 (Single Responsibility Principle)"]},"107":{"title":"解決策：責任を分離する","titles":["単一責任の原則 (Single Responsibility Principle)"]},"108":{"title":"クラス図","titles":["単一責任の原則 (Single Responsibility Principle)","解決策：責任を分離する","問題点"]},"109":{"title":"コード","titles":["単一責任の原則 (Single Responsibility Principle)","解決策：責任を分離する","問題点"]},"110":{"title":"責任の分離の判断基準（リファクタリング時の指針）","titles":["単一責任の原則 (Single Responsibility Principle)"]},"111":{"title":"実行例","titles":["単一責任の原則 (Single Responsibility Principle)","責任の分離の判断基準（リファクタリング時の指針）"]},"112":{"title":"補足：DRY原則との関係","titles":["単一責任の原則 (Single Responsibility Principle)"]},"113":{"title":"❌ よくある誤解","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係"]},"114":{"title":"クラス図","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係","❌ よくある誤解"]},"115":{"title":"コード","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係","❌ よくある誤解"]},"116":{"title":"✅ 正しい構成例：責任の分離","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係"]},"117":{"title":"クラス図","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係","✅ 正しい構成例：責任の分離"]},"118":{"title":"コード","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係","✅ 正しい構成例：責任の分離"]},"119":{"title":"実行例","titles":["単一責任の原則 (Single Responsibility Principle)","補足：DRY原則との関係","✅ 正しい構成例：責任の分離"]},"120":{"title":"補足：インターフェースを使った責任の分離（TypeScript）","titles":["単一責任の原則 (Single Responsibility Principle)"]},"121":{"title":"クラス図","titles":["単一責任の原則 (Single Responsibility Principle)","補足：インターフェースを使った責任の分離（TypeScript）","✅ 正しい構成例：責任の分離"]},"122":{"title":"コード","titles":["単一責任の原則 (Single Responsibility Principle)","補足：インターフェースを使った責任の分離（TypeScript）","✅ 正しい構成例：責任の分離"]},"123":{"title":"実装チェックリスト","titles":[]},"124":{"title":"各原則のチェックリスト（コードレビュー時の確認用）","titles":["実装チェックリスト"]},"125":{"title":"☑︎ 単一責任の原則（SRP）","titles":["実装チェックリスト","各原則のチェックリスト（コードレビュー時の確認用）"]},"126":{"title":"☑︎ オープンクローズドの原則（OCP）","titles":["実装チェックリスト","各原則のチェックリスト（コードレビュー時の確認用）"]},"127":{"title":"☑︎ リスコフの置換原則（LSP）","titles":["実装チェックリスト","各原則のチェックリスト（コードレビュー時の確認用）"]},"128":{"title":"☑︎ インターフェース分離の原則（ISP）","titles":["実装チェックリスト","各原則のチェックリスト（コードレビュー時の確認用）"]},"129":{"title":"☑︎ 依存性逆転の原則（DIP）","titles":["実装チェックリスト","各原則のチェックリスト（コードレビュー時の確認用）"]},"130":{"title":"詳細チェック","titles":["実装チェックリスト"]},"131":{"title":"🔍 単一責任の原則（SRP）: 詳細チェック","titles":["実装チェックリスト","詳細チェック"]},"132":{"title":"🔍 オープンクローズドの原則（OCP）: 詳細チェック","titles":["実装チェックリスト","詳細チェック"]},"133":{"title":"🔍 リスコフの置換原則（LSP）: 詳細チェック","titles":["実装チェックリスト","詳細チェック"]},"134":{"title":"🔍 インターフェース分離の原則（ISP）: 詳細チェック","titles":["実装チェックリスト","詳細チェック"]},"135":{"title":"🔍 依存性逆転の原則（DIP）: 詳細チェック","titles":["実装チェックリスト","詳細チェック"]},"136":{"title":"SOLID原則とは","titles":[]},"137":{"title":"なぜSOLIDが必要なのか？","titles":["SOLID原則とは"]},"138":{"title":"SOLID原則を適用するメリット","titles":["SOLID原則とは"]},"139":{"title":"👎 非SOLIDなコードの問題点","titles":["SOLID原則とは","SOLID原則を適用するメリット"]},"140":{"title":"👍 SOLIDなコードのメリット","titles":["SOLID原則とは","SOLID原則を適用するメリット"]},"141":{"title":"SOLID原則間の関連性","titles":["SOLID原則とは"]},"142":{"title":"SOLID原則の関連性","titles":["SOLID原則とは","SOLID原則間の関連性"]},"143":{"title":"学習を深めるためのリソース","titles":["SOLID原則とは"]}},"dirtCount":0,"index":[["qiita",{"2":{"143":1}}],["guru",{"2":{"143":1}}],["guide",{"2":{"143":1}}],["generatereport",{"2":{"100":1}}],["getarea",{"2":{"37":1,"38":2,"52":2,"54":2,"58":4}}],["学習を深めるためのリソース",{"0":{"143":1}}],["疎結合なモジュール設計を促進します",{"2":{"141":1}}],["相互に関連し合っています",{"2":{"141":1}}],["共有がしやすい",{"2":{"140":1}}],["共通の鳥の性質",{"2":{"34":1}}],["共通の動作に着目したインターフェースを使う",{"0":{"32":1},"1":{"33":1,"34":1}}],["チーム開発での理解",{"2":{"140":1}}],["予測しやすい",{"2":{"140":1}}],["似たような処理を何度も書いてしまう",{"2":{"139":1}}],["再利用しづらく",{"2":{"139":1}}],["再利用性の高いソフトウェアを構築するための設計指針であり",{"2":{"136":1}}],["全体を理解するのに時間がかかる",{"2":{"139":1}}],["多くの既存コードを変更する必要がある",{"2":{"139":1}}],["多機能プリンタ",{"2":{"16":1}}],["簡単な機能追加のはずなのに",{"2":{"139":1}}],["簡略化された表現",{"2":{"97":1}}],["意図しない別の場所に影響してバグが発生する",{"2":{"139":1}}],["ちょっとした修正が",{"2":{"139":1}}],["現代のソフトウェア開発では",{"2":{"137":1}}],["結合度を下げる",{"2":{"136":1}}],["小さなインターフェースを提供し",{"2":{"136":1}}],["安全な拡張が可能になる",{"2":{"136":1}}],["継承関係の一貫性を保ち",{"2":{"136":1}}],["得られるメリット",{"2":{"136":1}}],["説明",{"2":{"136":1}}],["頭文字",{"2":{"136":1}}],["2000年代にrobert",{"2":{"136":1}}],["良い設計",{"2":{"136":1}}],["特にオブジェクト指向プログラミングにおいて重要です",{"2":{"136":1}}],["コンストラクタ注入",{"2":{"135":1}}],["コードの再利用性が高く",{"2":{"140":1}}],["コードの構造が複雑で",{"2":{"139":1}}],["コードレビュー時の確認用",{"0":{"124":1},"1":{"125":1,"126":1,"127":1,"128":1,"129":1}}],["コード",{"0":{"4":1,"9":1,"18":1,"23":1,"29":1,"34":1,"37":1,"52":1,"58":1,"65":1,"70":1,"73":1,"81":1,"85":1,"88":1,"91":1,"94":1,"103":1,"109":1,"115":1,"118":1,"122":1},"1":{"53":1,"59":1}}],["高レベルモジュールが低レベルの具体実装に依存していないか",{"2":{"135":1}}],["高さが変化し",{"2":{"48":1}}],["高さは変化しない",{"2":{"47":1}}],["不要なメソッドの空実装や例外的実装が発生していないか",{"2":{"134":1}}],["基底クラス",{"2":{"132":1}}],["拡張性の高いコードを実現します",{"2":{"141":1}}],["拡張性が高く",{"2":{"140":1}}],["拡張性",{"2":{"136":1}}],["拡張のために既存のコード",{"2":{"132":1}}],["拡張に開かれている",{"2":{"61":1}}],["拡張に開かれ",{"2":{"61":1,"76":1,"136":1}}],["詳細チェック",{"0":{"130":1,"131":1,"132":1,"133":1,"134":1,"135":1},"1":{"131":1,"132":1,"133":1,"134":1,"135":1}}],["上位モジュールと下位モジュールは抽象に依存すべき",{"2":{"136":1}}],["上位モジュールが下位モジュールに依存していないか",{"2":{"129":1}}],["上位のモジュールは下位モジュールに依存してはならない",{"2":{"1":1}}],["派生クラスは親クラスとして振る舞えるか",{"2":{"127":1}}],["責務が明確に分離されているか",{"2":{"131":1}}],["責務が複数混在していないか",{"2":{"125":1}}],["責任の分離",{"0":{"116":1},"1":{"117":1,"118":1,"119":1,"121":1,"122":1}}],["責任の分離の判断基準",{"0":{"110":1},"1":{"111":1}}],["責任を分離する",{"0":{"107":1},"1":{"108":1,"109":1}}],["責任を分離することで",{"2":{"75":1}}],["責任",{"2":{"98":1,"134":1}}],["責任者",{"2":{"97":1}}],["☑︎",{"0":{"125":1,"126":1,"127":1,"128":1,"129":1}}],["後に学ぶ",{"2":{"122":1}}],["役割ごとの設計がしやすくなります",{"2":{"120":1}}],["月次レポート",{"2":{"119":1}}],["一つのクラスが複数の役割を持たなくなり",{"2":{"141":1}}],["一見よさそうに見えますが",{"2":{"115":1}}],["一部の修正",{"2":{"106":1}}],["ログ機能を専用クラスとして分離",{"2":{"118":1}}],["ログ出力の責任が印刷",{"2":{"115":1}}],["ログ出力を共通化したつもりが",{"2":{"115":1}}],["ロバート",{"2":{"97":1}}],["送信それぞれの機能に密結合してしまっています",{"2":{"115":1}}],["送信",{"2":{"115":1,"118":1}}],["送信する処理を1つのクラスに詰め込んだ例です",{"2":{"101":1}}],["異なるアクターの責任をインターフェースとして分離することで",{"2":{"120":1}}],["異なるアクターが関心を持つメソッドが混在していたら",{"2":{"110":1}}],["異なる責任を持つ処理を1つの関数やクラスにまとめるのは危険です",{"2":{"113":1}}],["同じ処理をしているから",{"2":{"113":1}}],["同じコードやロジックを繰り返さない",{"2":{"112":1}}],["yourself",{"2":{"112":1}}],["売上は前年比120",{"2":{"111":1}}],["売上レポート",{"2":{"111":1}}],["分離の検討をする",{"2":{"110":1}}],["分離すべき設計かもしれません",{"2":{"105":1}}],["挙動にも影響が出る可能性がある",{"2":{"106":1}}],["宛先やフォーマット変更を行いたい",{"2":{"106":1}}],["修正",{"2":{"137":1}}],["修正や拡張がしやすくなる",{"2":{"136":1}}],["修正のリスクが高くなる",{"2":{"106":1}}],["修正に閉じているべき",{"2":{"136":1}}],["修正に閉じていない",{"2":{"67":1}}],["修正に閉じる",{"2":{"76":1}}],["修正に閉じられている",{"2":{"61":2}}],["どの責任に影響があるかを特定するのに時間がかかる",{"2":{"106":1}}],["どちらもモジュール",{"2":{"1":1}}],["データ構造が異なるアクターに属する場合もsrp違反となり得ます",{"2":{"105":1}}],["運用やインフラ担当の関心",{"2":{"105":1}}],["運用担当",{"2":{"99":1,"100":1}}],["営業部など",{"2":{"105":1}}],["営業部門",{"2":{"99":1}}],["レポートの内容",{"2":{"105":1}}],["レポートを印刷",{"2":{"101":1}}],["あるクラスがレポートの内容とメール送信先の設定を同時に保持している場合",{"2":{"105":1}}],["あなたは既存のecサイトに新しい支払い方法やロイヤリティプログラムを追加する必要があります",{"2":{"78":1}}],["だけでなく",{"2":{"105":1}}],["だが",{"2":{"15":1}}],["処理",{"2":{"105":1}}],["も責任に含まれる",{"0":{"105":1}}],["ファクトリなどで依存関係を外部化しているか",{"2":{"135":1}}],["ファイル管理者の責任",{"2":{"104":1}}],["フィールドとメソッドが密接に関係している単位で",{"2":{"110":1}}],["フィールド",{"0":{"105":1},"2":{"105":1}}],["状態",{"0":{"105":1},"2":{"105":1}}],["通信",{"2":{"104":1}}],["通知ごとにクラスを分離すれば",{"2":{"68":1}}],["通知手段を拡張できる設計にする",{"0":{"68":1},"1":{"69":1,"70":1,"71":1,"72":1,"73":1}}],["通知種別ごとの責任が1クラスに集中",{"2":{"66":1}}],["通知方法が増えるたびに",{"2":{"66":1}}],["プリンタ担当者の責任",{"2":{"104":1}}],["プログラムコードの中にプログラムが満たすべき仕様について記述することで",{"2":{"39":1}}],["保存",{"2":{"101":1,"115":2,"118":1}}],["保守が避けられません",{"2":{"137":1}}],["保守が困難になるのです",{"2":{"99":1}}],["保守を行う運用者や管理者",{"2":{"99":1}}],["保守性が向上",{"2":{"140":1}}],["保守性が高い",{"2":{"95":1}}],["保守性",{"2":{"136":1}}],["保守性に課題があります",{"2":{"78":1}}],["保守コストが増大",{"2":{"62":1}}],["以下の詳細チェックリストも参考にしてください",{"2":{"129":1}}],["以下のような問題を解決できます",{"2":{"138":1}}],["以下のような視点を持つと",{"2":{"110":1}}],["以下のようなものが該当します",{"2":{"99":1}}],["以下は",{"2":{"101":1}}],["法制度やドメインルールなど",{"2":{"99":1}}],["ルール",{"2":{"99":1}}],["規格",{"2":{"99":1}}],["技術的",{"2":{"99":1}}],["技術的アクター",{"2":{"99":1}}],["ビジネス要件の変更を要求する人々",{"2":{"99":1}}],["ビジネスアクター",{"2":{"99":1,"105":1}}],["顧客など",{"2":{"99":1}}],["経営層",{"2":{"99":1,"100":1}}],["外部の制約により変更を強いる存在",{"2":{"99":1}}],["外部システム",{"2":{"99":1}}],["外部インターフェースの仕様策定者なども含まれます",{"2":{"99":1}}],["外の回答",{"2":{"53":1}}],["開発後の変更要求に柔軟に対応できる",{"2":{"136":1}}],["開発者など",{"2":{"99":1}}],["開発",{"2":{"99":1}}],["開かれて",{"2":{"71":1}}],["システムを利用するユーザーだけでなく",{"2":{"99":1}}],["シナリオ",{"0":{"78":1}}],["モジュール単位でのテストが容易",{"2":{"140":1}}],["モジュール同士の結びつきが強く",{"2":{"139":1}}],["モジュール間の独立性が高まる",{"2":{"136":1}}],["モジュール",{"2":{"99":1}}],["人",{"2":{"99":1}}],["have",{"2":{"98":1}}],["height",{"2":{"37":2,"47":1,"52":10,"58":5}}],["提唱者",{"2":{"98":1}}],["しばしば",{"2":{"98":1}}],["しかし現在のコードはsolid原則に従っておらず",{"2":{"78":1}}],["の関心",{"2":{"105":1}}],["ので",{"2":{"100":1}}],["の視点が本質になります",{"2":{"98":1}}],["の観点が重要か",{"0":{"98":1},"1":{"99":1,"100":1}}],["の機能をすべて持つ",{"2":{"16":1}}],["なぜsolidが必要なのか",{"0":{"137":1}}],["なぜ",{"0":{"98":1},"1":{"99":1,"100":1}}],["からの変更要求にのみ対応すべきという意味です",{"2":{"97":1}}],["かどうかに注目した設計に変えましょう",{"2":{"32":1}}],["や役割を指します",{"2":{"97":1}}],["アクターが異なる処理が1つのクラスに混在しており",{"2":{"104":1}}],["アクター",{"0":{"98":1},"1":{"99":1,"100":1},"2":{"98":1}}],["アクターとは",{"0":{"99":1},"2":{"97":1,"99":1}}],["アプリ通知システム",{"2":{"63":1}}],["uncle",{"2":{"97":1}}],["userid",{"2":{"81":1,"85":1}}],["マーティン自身は",{"2":{"97":1}}],["マーティン",{"2":{"97":1}}],["本来の意図は",{"2":{"97":1}}],["本質的な意味です",{"2":{"97":1}}],["たった一人のアクター",{"2":{"97":2,"136":1}}],["たとえば",{"2":{"2":1,"16":1,"27":1,"63":1,"99":1,"105":1}}],["各原則は独立していますが",{"2":{"141":1}}],["各原則の実装チェックリストはこちら",{"2":{"136":1}}],["各原則のチェックリスト",{"0":{"124":1},"1":{"125":1,"126":1,"127":1,"128":1,"129":1}}],["各原則の一覧",{"0":{"12":1}}],["各項目は最小限の基本観点を押さえています",{"2":{"129":1}}],["各機能を別クラスに分離するのが望ましい設計です",{"2":{"100":1}}],["各クラスが1つの責任に集中し",{"2":{"95":1}}],["依存オブジェクトをモック注入できる",{"2":{"95":1}}],["依存性逆転の原則に違反している例",{"0":{"2":1},"1":{"3":1,"4":1,"5":1}}],["依存性逆転の原則とは",{"0":{"1":1}}],["依存性逆転の原則",{"0":{"0":1,"92":1,"129":1,"135":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"93":1,"94":1},"2":{"12":1,"75":1,"136":1}}],["支払い手段の追加",{"2":{"95":1}}],["支払い処理のみに責任を持つ",{"2":{"85":1}}],["支払い処理",{"2":{"81":1}}],["＋リスコフの置換原則",{"0":{"86":1},"1":{"87":1,"88":1}}],["オープンクローズド原則",{"0":{"86":1},"1":{"87":1,"88":1}}],["オープンクローズドの原則の適用が容易になります",{"2":{"141":1}}],["オープンクローズドの原則は",{"2":{"76":1}}],["オープンクローズドの原則に違反する可能性が高まる",{"2":{"35":1}}],["オープンクローズドの原則",{"0":{"60":1,"126":1,"132":1},"1":{"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1},"2":{"12":1,"71":1,"136":1}}],["メール仕様変更",{"2":{"106":1}}],["メール送信の仕様を変更するだけなのに",{"2":{"106":1}}],["メール送信のみに責任を持つ",{"2":{"85":1}}],["メール送信仕様を変更したいが",{"2":{"106":1}}],["メール送信仕様変更",{"2":{"106":1}}],["メール送信先",{"2":{"105":1}}],["メール担当の責任",{"2":{"104":1}}],["メソッドごとに",{"2":{"110":1}}],["メソッド",{"2":{"105":1}}],["メソッドの正常終了時のインスタンスの状態",{"2":{"41":1}}],["メソッドの引数",{"2":{"40":1}}],["メソッド正常終了時に保証されるべき条件",{"2":{"41":1}}],["メソッド開始時のインスタンスの状態",{"2":{"40":1}}],["メソッド開始時に保証されるべき条件",{"2":{"40":1}}],["メソッドがあり",{"2":{"27":1}}],["注文確認メール送信",{"2":{"81":2}}],["ポリモーフィズムや拡張ポイントを利用しているか",{"2":{"126":1}}],["ポリモーフィズムを活用して拡張ポイントを明確にする",{"2":{"74":1}}],["ポイント計算方式の変更が柔軟に",{"2":{"95":1}}],["ポイント計算のみに責任を持つ",{"2":{"85":1}}],["ポイント計算",{"2":{"81":1}}],["銀行振込処理",{"2":{"81":1,"88":1}}],["クレジットカード処理",{"2":{"81":1,"88":1}}],["クライアントにとって不要なメソッドへの依存を強制しない",{"2":{"136":1}}],["クライアントに返す戻り値",{"2":{"41":1}}],["クライアントが不要なメソッドに依存していないか",{"2":{"128":1}}],["クライアントコードに影響なく置き換えられるか",{"2":{"127":1}}],["クライアントコードがサブクラスと親クラスを区別せず使えているか",{"2":{"133":1}}],["クライアントコードが",{"2":{"20":1}}],["クラスやモジュールに複数の役割が混在していないか",{"2":{"131":1}}],["クラスの責任が複数あるかを判断しやすくなります",{"2":{"110":1}}],["クラスの振る舞いや構造に対して変更を要求し得る主体を指します",{"2":{"99":1}}],["クラスを変更する理由は1つだけであるべき",{"2":{"97":1}}],["クラスを継承した",{"2":{"27":1}}],["クラスは1つの責任しか持つべきでない",{"2":{"98":1}}],["クラスは",{"2":{"97":1,"136":1}}],["クラスには変更理由がひとつだけであるべき",{"2":{"98":1}}],["クラスには",{"2":{"27":1}}],["クラスがあるとします",{"2":{"27":1}}],["クラス図",{"0":{"3":1,"8":1,"17":1,"22":1,"26":1,"28":1,"33":1,"50":1,"57":1,"64":1,"69":1,"72":1,"80":1,"84":1,"87":1,"90":1,"93":1,"102":1,"108":1,"114":1,"117":1,"121":1}}],["bob",{"2":{"97":1}}],["banktransferpayment",{"2":{"88":1}}],["bank",{"2":{"81":1}}],["before",{"0":{"79":1},"1":{"80":1,"81":1}}],["birdならばflyできる",{"2":{"31":1}}],["bird",{"2":{"27":2,"29":3,"30":1,"31":3,"34":3}}],["非solidなコードの問題点",{"0":{"139":1}}],["非solidなコード",{"0":{"79":1},"1":{"80":1,"81":1}}],["機能追加のたびに既存コードを変更しなければならず",{"2":{"78":1}}],["機能追加が容易で安全なコードベースを構築できます",{"2":{"76":1}}],["機能ごとにインターフェースを分割する",{"0":{"21":1},"1":{"22":1,"23":1}}],["設計が複雑になる危険があります",{"2":{"112":1}}],["設計により",{"2":{"76":1}}],["設計段階で",{"2":{"74":1}}],["ソフトウェアの変更に対する柔軟性と安定性のバランスを実現します",{"2":{"76":1}}],["ソフトウェアの構成要素は",{"2":{"61":1}}],["具体的な実装の変更に強くなる",{"2":{"75":1}}],["変更の影響範囲が局所的で",{"2":{"140":1}}],["変更の可能性がある部分を特定し",{"2":{"74":1}}],["変更理由が明確になり",{"2":{"136":1}}],["変更理由が複数になり",{"2":{"99":1}}],["変更理由",{"2":{"98":1,"131":1}}],["変更理由も分離され",{"2":{"75":1}}],["変更を要求する利害関係者",{"2":{"97":1}}],["変更がクラス追加のみで可能",{"2":{"95":1}}],["他の処理も巻き込んでしまう例",{"2":{"106":1}}],["他のクラスやモジュールなど",{"2":{"99":1}}],["他のシステム",{"2":{"99":1}}],["他のsolid原則との関連",{"0":{"75":1}}],["他の支払い手段を自由に差し替えられる",{"2":{"10":1}}],["他の支払い方法を使いたくなったときに書き換えが必要になる",{"2":{"5":1}}],["適切に抽象化された",{"2":{"74":1}}],["キャンペーンのお知らせ",{"2":{"73":1}}],["いる状態",{"2":{"71":1}}],["いるが",{"2":{"71":1}}],["閉じて",{"2":{"71":1}}],["＝単一責任",{"2":{"122":1}}],["＝",{"2":{"67":1}}],["＝リスコフの置換原則違反",{"2":{"30":1}}],["まとめ",{"0":{"76":1}}],["まだ対応していない",{"2":{"67":1}}],["またはエラーの可能性",{"2":{"31":1}}],["契約",{"2":{"74":1}}],["契約完了",{"2":{"67":1}}],["契約による設計においての",{"0":{"42":1}}],["契約による設計",{"0":{"39":1},"1":{"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1}}],["よくある誤解",{"0":{"113":1},"1":{"114":1,"115":1}}],["ようこそ",{"2":{"67":1}}],["より深いレビューや設計判断を行いたい場合は",{"2":{"129":1}}],["より弱い事前条件になっている",{"2":{"45":1}}],["より強い事前条件になっているため",{"2":{"45":1}}],["原則",{"2":{"136":1}}],["原則は",{"2":{"112":1}}],["原則違反のリスク",{"0":{"67":1}}],["原則に違反",{"0":{"66":1},"1":{"69":1,"70":1}}],["原則に違反した例",{"0":{"63":1},"1":{"64":1,"65":1,"66":1}}],["原則に違反するとどうなるか",{"0":{"6":1,"20":1,"31":1,"106":1}}],["バグのリスクが高まる",{"2":{"66":1}}],["$",{"2":{"65":3,"70":3,"73":1,"94":1,"103":3,"106":4,"109":3,"115":4,"118":4}}],["ユーザーや関係者",{"2":{"97":1}}],["ユーザーに対して様々な方法で通知を送る仕組みです",{"2":{"63":1}}],["ユニットテスト",{"0":{"54":1},"1":{"55":1}}],["既存コードを壊さずに新しい振る舞いを追加できる",{"2":{"136":1}}],["既存コードを変更せずに拡張できる",{"2":{"75":1}}],["既存コードの修正によるバグ発生リスク",{"2":{"62":1}}],["既存の動作には",{"2":{"71":1}}],["既存のコードは一切変更しない",{"2":{"71":1}}],["既存の安定したコードを変更しなくてもよい",{"2":{"61":1}}],["既存クラスを開いて書き換える必要がある",{"2":{"67":1}}],["新機能の追加が容易",{"2":{"140":1}}],["新機能追加のたびに既存コードを変更する必要がある",{"2":{"62":1}}],["新たに追加",{"2":{"73":1}}],["新規拡張は",{"2":{"71":1}}],["新しい振る舞いを既存コードの変更なしに追加できる構成か",{"2":{"132":1}}],["新しい機能追加の際に既存クラスを修正していないか",{"2":{"126":1}}],["新しいクラスに抽出する",{"2":{"110":1}}],["新しい支払い方法を追加するたびにこのメソッドを変更する必要がある",{"2":{"81":1}}],["新しい通知方式を追加しても既存コードを触らずに済みます",{"2":{"68":1}}],["新しい要件や機能を追加できる",{"2":{"61":1}}],["べきという原則です",{"2":{"61":1}}],["9",{"2":{"59":1}}],["想定",{"2":{"53":1}}],["違反例",{"0":{"51":1},"1":{"52":1,"53":1,"54":1,"55":1}}],["with",{"2":{"143":1}}],["width",{"2":{"47":5,"48":5,"52":10,"58":5}}],["wight",{"2":{"37":2}}],["05",{"2":{"91":1}}],["01",{"2":{"81":1,"91":1}}],["0",{"2":{"44":1,"52":2,"58":3,"81":2,"85":1,"91":2}}],[">",{"2":{"44":1,"45":2}}],["x26",{"2":{"47":2}}],["x",{"2":{"44":2,"45":3}}],["事後条件",{"2":{"47":1,"48":1}}],["事後条件はスーパータイプと同じかそれより強い条件",{"0":{"46":1},"1":{"47":1,"48":1,"50":1}}],["事後条件とは",{"0":{"41":1}}],["事前条件",{"2":{"44":1,"45":2}}],["事前条件はスーパータイプと同じかそれより弱い条件",{"0":{"43":1},"1":{"44":1,"45":1}}],["事前条件とは",{"0":{"40":1}}],["正しい構成例",{"0":{"116":1},"1":{"117":1,"118":1,"119":1,"121":1,"122":1}}],["正しい継承",{"2":{"25":1}}],["正確で眼瞼なソフトウェアとする設計技法",{"2":{"39":1}}],["補足",{"0":{"39":1,"112":1,"120":1},"1":{"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"121":1,"122":1}}],["1クラスが3つのアクターに責任を持っている",{"2":{"100":1}}],["1つのクラスは1人のアクター",{"2":{"97":1}}],["1つのアクター",{"2":{"97":1}}],["1つの変更理由",{"2":{"97":1}}],["16",{"2":{"53":1}}],["16となり",{"2":{"38":1,"54":1}}],["1",{"2":{"45":1,"55":2}}],["10",{"2":{"45":1}}],["12",{"2":{"38":2,"53":2,"54":2,"59":1}}],["4",{"2":{"38":2,"52":2,"54":2,"58":1}}],["3",{"2":{"38":2,"52":2,"54":2,"58":2}}],["テストがしにくい",{"2":{"139":1}}],["テストしやすいように",{"2":{"131":1}}],["テスト対象が多く",{"2":{"106":1}}],["テスト容易",{"2":{"95":1}}],["テスト済みの既存コードに手を加えることになるため",{"2":{"66":1}}],["テスト範囲が広がり",{"2":{"62":1}}],["テストに失敗する",{"2":{"38":1,"54":1}}],["テストコード",{"0":{"38":1}}],["テスト時には",{"2":{"10":1}}],["振る舞いの変更に気付くには",{"0":{"36":1},"1":{"37":1,"38":1}}],["振る舞いの同等性",{"2":{"25":1}}],["robert",{"2":{"98":1,"143":3}}],["run",{"2":{"52":2,"58":2}}],["r1",{"2":{"38":4,"54":4}}],["refactoring",{"2":{"143":1}}],["repeat",{"2":{"112":1}}],["report",{"2":{"109":11,"111":5,"115":9,"118":10,"119":5,"122":6}}],["reportmanager",{"2":{"100":1,"103":1,"106":2,"115":1}}],["recipient",{"2":{"106":2}}],["rectable",{"2":{"58":4}}],["rectangle",{"2":{"37":1,"38":3,"52":4,"54":4,"58":2}}],["reason",{"2":{"98":1}}],["responsibility",{"0":{"96":1},"1":{"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1},"2":{"97":1}}],["regularcustomerpoints",{"2":{"91":1}}],["return",{"2":{"37":1,"52":2,"58":2,"81":1,"91":2}}],["r",{"2":{"35":1,"37":4,"52":4}}],["リリース後の機能追加",{"2":{"137":1}}],["リファクタリング時の指針",{"0":{"110":1},"1":{"111":1}}],["リスコフの置換条件違反",{"2":{"45":1,"48":1}}],["リスコフの置換原則はオープンクローズドの原則を支え",{"2":{"141":1}}],["リスコフの置換原則に違反するとどうなるか",{"0":{"35":1}}],["リスコフの置換原則に違反した例",{"0":{"27":1},"1":{"28":1,"29":1,"30":1}}],["リスコフの置換原則とは",{"0":{"25":1},"1":{"26":1}}],["リスコフの置換原則",{"0":{"24":1,"127":1,"133":1},"1":{"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1},"2":{"12":1,"75":1,"136":1}}],["リコリスの置換原則に違反したコードを使うと",{"2":{"35":1}}],["置き換え可能な設計＝リスコフの置換原則に準拠した設計になります",{"2":{"34":1}}],["ステークホルダー",{"2":{"97":1}}],["スーパータイプより事後条件となるため",{"2":{"48":1}}],["スーパータイプ",{"0":{"44":1,"47":1},"2":{"52":1}}],["スーパータイプとサブタイプで振る舞いが変更されていることを確認する最も簡単な方法は単体テストを書くこと",{"2":{"36":1}}],["スズメが飛んだ",{"2":{"34":1}}],["スキャンできる",{"2":{"20":1}}],["スキャンしました",{"2":{"18":1,"23":1}}],["スキャン",{"2":{"16":1}}],["鳴くなど",{"2":{"34":1}}],["例",{"0":{"100":1},"1":{"102":1,"103":1},"2":{"34":1,"106":1}}],["鳥＝飛ぶもの",{"2":{"32":1}}],["つまり",{"2":{"32":1,"97":1,"99":1}}],["飛べない鳥",{"2":{"32":1}}],["飛べる鳥",{"2":{"32":1}}],["飛べる",{"2":{"32":1}}],["飛べません",{"2":{"30":1}}],["ことを推奨しますが",{"2":{"112":1}}],["これらの原則は",{"2":{"136":1}}],["これらを実装するクラスは",{"2":{"122":1}}],["これらが1つのクラスに混在すると",{"2":{"99":1}}],["これを",{"2":{"97":1}}],["これは誰のための処理か",{"2":{"110":1}}],["これは",{"2":{"67":1,"100":1}}],["ここで誤動作",{"2":{"31":1}}],["このクラスは1つの理由でしか変更されないか",{"2":{"125":1}}],["この",{"2":{"98":2}}],["この設計の利点",{"0":{"95":1}}],["この設計は",{"2":{"30":1,"122":1}}],["この機能は将来的に種類が増えるかもしれない",{"2":{"74":1}}],["この原則が解決する問題",{"0":{"62":1}}],["この原則の要点",{"0":{"61":1}}],["このようにログ出力をdryの観点から共通化すると",{"2":{"115":1}}],["このように",{"2":{"105":1}}],["このようにすれば",{"2":{"34":1}}],["このように分離することで",{"2":{"23":1}}],["このプリンタはfaxできません",{"2":{"18":1}}],["このプリンタはスキャンできません",{"2":{"18":1}}],["このサイトは",{"2":{"11":1}}],["でした",{"2":{"111":1}}],["で",{"2":{"97":1}}],["です",{"2":{"30":1,"99":1,"100":1}}],["では意図しない動作や例外が発生するかもしれません",{"2":{"30":1}}],["型に対してのみ",{"2":{"34":1}}],["型の置き換えができない",{"2":{"30":1}}],["型で受け取って",{"2":{"30":1}}],["ペンギン",{"2":{"30":1}}],["空を飛ぶ",{"2":{"29":1}}],["すべての鳥が飛べる前提です",{"2":{"27":1}}],["filesaver",{"2":{"109":1,"111":1,"118":1,"119":1}}],["foreach",{"2":{"70":1}}],["failed",{"2":{"55":1}}],["faxnotifier",{"2":{"73":2}}],["faxnotifierを新規追加するだけで対応でき",{"2":{"71":1}}],["faxに対応するには",{"2":{"67":1}}],["faxが新しく追加されたが",{"2":{"67":1}}],["faxを送信しました",{"2":{"18":1,"23":1}}],["fax",{"2":{"16":1,"18":3,"23":4,"67":1}}],["from",{"2":{"54":1}}],["f",{"2":{"37":1,"38":2,"52":3,"54":3,"58":3}}],["flyer",{"2":{"34":3}}],["fly",{"2":{"27":1,"29":1,"30":1,"31":2,"34":4}}],["+",{"2":{"25":1}}],["関係",{"2":{"25":1}}],["関係のない機能まで対応を強いられる",{"2":{"19":1}}],["それぞれが異なるアクターの責任領域であれば",{"2":{"105":1}}],["それを",{"2":{"74":1}}],["それをすべてのプリンタに強制している例です",{"2":{"16":1}}],["そのような変化に柔軟に対応できる設計を実現するために重要な指針です",{"2":{"137":1}}],["その結果",{"2":{"106":1}}],["そのものを変更してしまう",{"2":{"106":1}}],["そのクラスの",{"2":{"131":1}}],["そのクラスの変更を要求する主体",{"2":{"99":1}}],["そのクラスを利用している者",{"2":{"99":1}}],["そのクラスに変更を求める人や立場＝アクターを意味します",{"2":{"98":1}}],["そのスーパータイプと置換可能でなければならない",{"2":{"25":1}}],["サブクラスで例外的な動作",{"2":{"133":1}}],["サブクラスでの実装を強制することができる",{"2":{"15":1}}],["サブクラスが親クラスの期待する振る舞いをすべて満たしているか",{"2":{"133":1}}],["サブタイプが正しく設計されていれば",{"2":{"75":1}}],["サブタイプ",{"0":{"45":1,"48":1},"2":{"52":1}}],["サブタイプの事後条件はスーパータイプと同じかそれより強い条件と置き換える",{"2":{"42":1}}],["サブタイプの事前条件はスーパータイプと同じかそれより弱い条件と置き換え",{"2":{"42":1}}],["サブタイプの事前条件と事後条件",{"0":{"42":1}}],["サブタイプはスーパータイプと置換可能でなければならない",{"2":{"136":1}}],["サブタイプは",{"2":{"25":1}}],["→",{"2":{"23":1,"104":3,"105":2,"106":1}}],["必要なインターフェースだけ",{"2":{"23":1}}],["必要な機能だけ",{"2":{"23":1}}],["信頼性を損なう",{"2":{"20":1}}],["といって",{"2":{"113":1}}],["という",{"2":{"98":1}}],["という観点から説明しています",{"2":{"97":1}}],["という定義をしており",{"2":{"97":1}}],["ということです",{"2":{"97":1}}],["という前提ではなく",{"2":{"32":1}}],["という抽象に依存しているので",{"2":{"10":1}}],["と混同すると",{"2":{"112":1}}],["と問い直す",{"2":{"110":1}}],["と言い換えることもできます",{"2":{"99":1}}],["とは",{"2":{"98":1}}],["とは誰のためのものか",{"2":{"98":1}}],["と表現されますが",{"2":{"98":1}}],["と考える習慣をつける",{"2":{"74":1}}],["として切り出す",{"2":{"74":1}}],["と",{"2":{"32":1}}],["と信じて使っているのに",{"2":{"31":1}}],["と誤解して使ってしまう",{"2":{"20":1}}],["将来の変更時に",{"2":{"19":1}}],["使えない機能",{"2":{"19":1}}],["利害関係者",{"2":{"97":1}}],["利用側に応じた適切な粒度のインターフェースが提供されているか",{"2":{"134":1}}],["利用側でクラスを判別するための分岐を入れののはng",{"2":{"35":1}}],["利用者",{"2":{"97":2}}],["利用者がサブタイプまで全て理解した上で利用する必要がある",{"2":{"35":1}}],["利用者が想定しない挙動によるバグが発生する可能性が高まる",{"2":{"35":1}}],["利用者はスーパータイプとサブタイプは同じ挙動を期待して利用する",{"2":{"35":1}}],["利用者は",{"2":{"31":1}}],["利用者も",{"2":{"19":1}}],["利点",{"0":{"10":1,"71":1},"1":{"72":1,"73":1}}],["無理やり実装を強制されている",{"2":{"19":1}}],["ecサイト機能拡張",{"0":{"77":1},"1":{"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1}}],["ecサイトの責務分離と拡張設計",{"2":{"13":1}}],["else",{"2":{"65":2,"81":1}}],["emailable",{"2":{"122":1}}],["emailsender",{"2":{"109":1,"111":1,"118":1,"119":1}}],["emailservice",{"2":{"85":1,"94":3}}],["emailnotifier",{"2":{"70":1,"73":1}}],["email",{"2":{"65":1,"67":1}}],["example",{"2":{"106":1}}],["export",{"2":{"52":3}}],["expect",{"2":{"38":2,"54":2}}],["extends",{"2":{"29":2,"34":2,"52":1}}],["error",{"2":{"18":2}}],["agile",{"2":{"143":1}}],["and",{"2":{"143":2}}],["architecture",{"2":{"143":1}}],["action",{"2":{"115":2,"118":2}}],["admin",{"2":{"106":1}}],["apiの利用者",{"2":{"99":1}}],["after",{"0":{"82":1},"1":{"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1}}],["a",{"2":{"25":1,"98":1,"143":1}}],["allinoneprinter",{"2":{"18":1,"23":1}}],["amount",{"2":{"4":4,"6":2,"9":7,"91":5}}],["martin公式サイト",{"2":{"143":1}}],["martin著",{"2":{"143":2}}],["martin氏によって提唱されました",{"2":{"136":1}}],["martin",{"2":{"98":1}}],["makeitfly",{"2":{"31":2}}],["message",{"2":{"65":4,"70":9,"73":2,"106":2}}],["multifunctiondevice",{"2":{"16":1,"18":3}}],["mockpayment",{"2":{"10":1}}],["印刷処理や保存処理のテスト",{"2":{"106":1}}],["印刷や保存",{"2":{"106":1}}],["印刷しました",{"2":{"18":2,"23":2}}],["印刷",{"2":{"16":1,"115":1,"118":1}}],["を支えるものです",{"2":{"136":1}}],["をしていないか",{"2":{"133":1}}],["を利用して柔軟に設計されているか",{"2":{"132":1}}],["を頻繁に修正していないか",{"2":{"132":1}}],["を持つことになります",{"2":{"122":1}}],["を定義する",{"2":{"74":1}}],["を自然に満たしている",{"2":{"71":1}}],["を呼び出せるようになるため",{"2":{"34":1}}],["を呼ぶと",{"2":{"30":1}}],["を分けて扱うようにします",{"2":{"32":1}}],["を正しく扱えないためバグの原因になります",{"2":{"31":1}}],["を実装し",{"2":{"23":1}}],["を見えてしまう",{"2":{"19":1}}],["を考えてみましょう",{"2":{"16":1,"63":1}}],["を注入することで柔軟なテストが可能",{"2":{"10":1}}],["➡️",{"2":{"15":1}}],["インターフェースが1つの関心事",{"2":{"134":1}}],["インターフェース",{"2":{"132":1,"135":1}}],["インターフェースは肥大化していないか",{"2":{"128":1}}],["インターフェースを使った責任の分離",{"0":{"120":1},"1":{"121":1,"122":1}}],["インターフェースを定義し",{"2":{"16":1}}],["インターフェースの変更を要求し得るもの",{"2":{"99":1}}],["インターフェースのクライアントにとって利用しないフィールドやメソッドへの依存を矯正してはならない",{"2":{"15":1}}],["インターフェース設計が重要",{"2":{"74":1}}],["インターフェースで通知手段を抽象化し",{"2":{"68":1}}],["インターフェースに用意されている不必要なフィールドやメソッドにクライアントが依存しなくてもいいようにインターフェースは適切に分割すべき",{"2":{"15":1}}],["インターフェースや抽象クラスの抽象メソッドは未実装のままではエラーとなり",{"2":{"15":1}}],["インターフェース分離の原則と依存性逆転の原則は互いに補完し合い",{"2":{"141":1}}],["インターフェース分離の原則とは",{"0":{"15":1}}],["インターフェース分離の原則に準拠した設計になります",{"2":{"23":1}}],["インターフェース分離の原則に違反した例",{"0":{"16":1},"1":{"17":1,"18":1,"19":1}}],["インターフェース分離の原則",{"0":{"14":1,"89":1,"128":1,"134":1},"1":{"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"90":1,"91":1},"2":{"12":1,"122":1,"136":1}}],["ケーススタディ",{"0":{"13":1}}],["d",{"2":{"136":1}}],["diコンテナ",{"2":{"135":1}}],["dip",{"0":{"92":1,"129":1,"135":1},"1":{"93":1,"94":1},"2":{"12":1,"95":1}}],["don",{"2":{"112":1}}],["dry",{"2":{"112":1}}],["dry原則との関係",{"0":{"112":1},"1":{"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1}}],["dba",{"2":{"99":1,"100":1}}],["dev",{"2":{"143":1}}],["development",{"2":{"143":1}}],["design",{"2":{"143":1}}],["describe",{"2":{"54":1}}],["dependency",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}}],["l",{"2":{"136":1}}],["length",{"2":{"58":6}}],["liskov",{"0":{"24":1},"1":{"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1}}],["lsp",{"0":{"86":1,"127":1,"133":1},"1":{"87":1,"88":1},"2":{"12":1}}],["logger",{"2":{"118":10,"119":5}}],["log",{"2":{"4":1,"6":1,"9":2,"18":4,"23":4,"29":1,"34":1,"52":2,"58":1,"65":3,"70":3,"73":1,"81":3,"88":3,"94":1,"103":3,"106":3,"109":3,"115":9,"118":9}}],["loading",{"2":{"3":1,"8":1,"17":1,"22":1,"26":1,"28":1,"33":1,"39":1,"51":1,"57":1,"64":1,"69":1,"72":1,"80":1,"84":1,"87":1,"90":1,"93":1,"100":1,"102":1,"108":1,"114":1,"117":1,"121":1,"142":1}}],["ood",{"2":{"143":1}}],["of",{"2":{"143":1}}],["o",{"2":{"136":1}}],["one",{"2":{"98":1}}],["only",{"2":{"98":1}}],["order",{"2":{"81":1,"85":7,"88":11,"94":5}}],["orderservice",{"2":{"2":1,"4":1,"5":1,"6":1,"9":1,"10":1,"94":1}}],["open",{"0":{"60":1},"1":{"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1}}],["oldheight",{"2":{"47":1}}],["ok",{"2":{"45":1}}],["ocpの適用が容易になる",{"2":{"75":1}}],["ocp",{"0":{"86":1,"126":1,"132":1},"1":{"87":1,"88":1},"2":{"12":1,"67":1,"71":1,"95":1}}],["structure",{"2":{"143":1}}],["string",{"2":{"65":2,"70":5,"73":1,"81":1,"85":1,"103":2,"106":2,"109":2,"115":1,"118":2}}],["software",{"2":{"143":2}}],["solid",{"2":{"143":2}}],["solidなコードのメリット",{"0":{"140":1}}],["solid原則の関連性",{"0":{"142":1}}],["solid原則間の関連性",{"0":{"141":1},"1":{"142":1}}],["solid原則を適用することで",{"2":{"138":1}}],["solid原則を適用するメリット",{"0":{"138":1},"1":{"139":1,"140":1}}],["solid原則を具体例と共に解説し",{"2":{"11":1}}],["solid原則は",{"2":{"136":1,"137":1}}],["solid原則とは",{"0":{"136":1},"1":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1}}],["solid原則に準拠したリファクタリング",{"0":{"82":1},"1":{"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1}}],["solid原則ケーススタディ",{"0":{"77":1},"1":{"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1}}],["solidの原則とは",{"2":{"11":1}}],["s",{"2":{"136":1,"143":1}}],["switch文など",{"2":{"132":1}}],["saveable",{"2":{"122":1}}],["saver",{"2":{"111":2,"119":2}}],["save",{"2":{"109":1,"111":1,"115":1,"118":1,"119":1,"122":1}}],["savetofile",{"2":{"103":1,"104":1,"106":1}}],["savetodatabase",{"2":{"100":1}}],["should",{"2":{"98":1}}],["shape",{"2":{"58":5}}],["single",{"0":{"96":1},"1":{"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1},"2":{"97":1}}],["simpleprinter",{"2":{"18":1,"19":1,"20":1,"23":1}}],["smsnotifier",{"2":{"70":1,"73":1}}],["sms",{"2":{"65":1}}],["squrare",{"2":{"52":2,"54":1}}],["square",{"2":{"35":1,"38":2,"54":2,"58":5}}],["super",{"2":{"48":2,"52":4}}],["substitution",{"0":{"24":1},"1":{"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1}}],["sender",{"2":{"111":2,"119":2}}],["sendemail",{"2":{"100":1,"103":1,"104":1,"106":1}}],["sendconfirmationemail",{"2":{"81":1,"85":1,"94":1}}],["send",{"2":{"70":5,"73":1,"109":1,"111":1,"115":1,"118":1,"119":1,"122":1}}],["service",{"2":{"67":3,"73":2}}],["setlength",{"2":{"58":2}}],["sethight",{"2":{"48":1}}],["setheight",{"2":{"37":1,"52":5,"58":2}}],["setwidth",{"2":{"37":1,"48":1,"52":5,"58":2}}],["segregation",{"0":{"14":1},"1":{"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1}}],["sparrow",{"2":{"29":1,"34":1}}],["scanner",{"2":{"23":2}}],["scan",{"2":{"18":3,"20":1,"23":2}}],["srp違反",{"2":{"100":1}}],["srp違反の構造",{"0":{"100":1},"1":{"102":1,"103":1}}],["srp",{"0":{"83":1,"125":1,"131":1},"1":{"84":1,"85":1},"2":{"12":1,"95":1,"112":1}}],["単一のインターフェース",{"2":{"122":1}}],["単一の責任を持つべき",{"2":{"97":1}}],["単一責任に違反している例",{"0":{"101":1},"1":{"102":1,"103":1,"104":1}}],["単一責任の原則を守ることで",{"2":{"141":1}}],["単一責任の原則に違反しています",{"2":{"104":1}}],["単一責任の原則にも違反している",{"2":{"66":1}}],["単一責任の原則は",{"2":{"98":1,"105":1}}],["単一責任の原則とは",{"0":{"97":1}}],["単一責任の原則",{"0":{"83":1,"96":1,"125":1,"131":1},"1":{"84":1,"85":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1},"2":{"12":1,"75":1,"97":1,"112":1,"136":1}}],["単体テスト時に支払い部分を差し替えられない",{"2":{"5":1}}],["👍",{"0":{"140":1}}],["👎",{"0":{"139":1}}],["🔍",{"0":{"131":1,"132":1,"133":1,"134":1,"135":1}}],["👈",{"2":{"31":1,"38":1,"45":2,"47":1,"48":1,"54":1}}],["🛠",{"0":{"13":1}}],["🔎",{"0":{"12":1,"100":1},"1":{"102":1,"103":1}}],["📘solidの原則",{"0":{"11":1},"1":{"12":1,"13":1}}],["実はいくつかの表現方法があります",{"2":{"97":1}}],["実務で役立つヒント",{"0":{"74":1}}],["実行例",{"0":{"111":1,"119":1}}],["実行結果",{"0":{"53":1,"55":1,"59":1}}],["実行時エラーの原因となり",{"2":{"20":1}}],["実行時にエラー",{"2":{"20":1}}],["実際には",{"2":{"31":1}}],["実装に依存せず",{"2":{"136":1}}],["実装ではなく抽象",{"2":{"135":1}}],["実装ではなく抽象に依存しているか",{"2":{"129":1}}],["実装チェックリスト",{"0":{"123":1},"1":{"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1}}],["実装上の理由で変更を要求する人々",{"2":{"99":1}}],["実装クラスに関係ないメソッドがあったしても実装しなければいけない",{"2":{"15":1}}],["実装の詳細が",{"2":{"1":1}}],["実践的な理解を促すことを目的としています",{"2":{"11":1}}],["は1種類に限定されているか",{"2":{"131":1}}],["は次のように述べています",{"2":{"98":1}}],["は実装しない",{"2":{"34":1}}],["は実装の詳細に依存してはならない",{"2":{"1":1}}],["は鳥ではあるが",{"2":{"30":1}}],["はスキャンもfaxもできないのに",{"2":{"19":1}}],["は",{"2":{"10":1,"97":2}}],["✅",{"0":{"10":1,"71":1,"83":1,"86":1,"89":1,"92":1,"95":1,"116":1},"1":{"72":1,"73":1,"84":1,"85":1,"87":1,"88":1,"90":1,"91":1,"93":1,"94":1,"117":1,"118":1,"119":1,"121":1,"122":1},"2":{"136":1}}],["i",{"2":{"136":1}}],["items",{"2":{"81":1,"85":1}}],["if文",{"2":{"132":1}}],["if",{"2":{"65":3,"81":2}}],["is",{"2":{"25":1}}],["isp",{"0":{"89":1,"128":1,"134":1},"1":{"90":1,"91":1},"2":{"12":1,"95":1,"122":1}}],["index",{"2":{"54":1}}],["instanceof",{"2":{"35":1}}],["interface",{"0":{"14":1},"1":{"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"2":{"23":2,"122":2}}],["inversion",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}}],["implements",{"2":{"9":2,"18":2,"23":2,"34":1,"58":1,"70":3,"73":1,"88":3,"91":2}}],["解決策",{"0":{"7":1,"21":1,"32":1,"56":1,"68":1,"107":1},"1":{"8":1,"9":1,"10":1,"22":1,"23":1,"33":1,"34":1,"57":1,"58":1,"59":1,"69":1,"70":1,"71":1,"72":1,"73":1,"108":1,"109":1}}],["側で直接paypalpaymentに書き換える必要がある",{"2":{"6":1}}],["問題点",{"0":{"5":1,"19":1,"30":1,"66":1,"104":1},"1":{"8":1,"9":1,"22":1,"23":1,"33":1,"34":1,"37":1,"38":1,"69":1,"70":1,"108":1,"109":1}}],["❌",{"0":{"5":1,"19":1,"30":1,"66":1,"113":1},"1":{"8":1,"9":1,"22":1,"23":1,"33":1,"34":1,"37":1,"38":1,"69":1,"70":1,"114":1,"115":1}}],["t",{"2":{"112":1}}],["txt`",{"2":{"103":1,"106":1,"109":1,"115":1,"118":1}}],["title",{"2":{"103":4,"106":4,"109":4,"115":3,"118":4}}],["typescriptで学ぶsolid原則",{"2":{"143":1}}],["typescriptでは",{"2":{"120":1}}],["typescript",{"0":{"120":1},"1":{"121":1,"122":1},"2":{"143":1}}],["type",{"2":{"65":4}}],["tyepscriptコード例",{"0":{"49":1},"1":{"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1}}],["to=$",{"2":{"106":1}}],["to",{"2":{"98":1,"143":2}}],["totalprice",{"2":{"81":2,"85":1,"94":1}}],["total",{"2":{"55":1}}],["tobe",{"2":{"38":2,"54":2}}],["testsuites",{"2":{"55":1}}],["test",{"2":{"38":3,"54":3}}],["the",{"2":{"143":1}}],["throwなど",{"2":{"133":1}}],["throw",{"2":{"18":2}}],["this",{"2":{"4":1,"9":1,"47":3,"48":1,"52":4,"58":7,"70":1,"81":1,"88":1,"94":3,"103":4,"106":5,"115":3,"118":3}}],["ts",{"2":{"52":1,"106":1}}],["tssetwidth",{"2":{"47":1,"48":1}}],["tsmethoda",{"2":{"44":1,"45":1}}],["tsdescribe",{"2":{"38":1}}],["tsexport",{"2":{"37":1}}],["tsimport",{"2":{"54":1}}],["tsif",{"2":{"35":1}}],["tsinterface",{"2":{"9":1,"18":1,"23":1,"34":1,"58":1,"70":1,"88":1,"91":1,"122":1}}],["tsfunction",{"2":{"31":1}}],["tsconst",{"2":{"20":1,"67":1,"111":1,"119":1}}],["tsclass",{"2":{"4":1,"6":1,"29":1,"65":1,"73":1,"81":1,"85":1,"94":1,"100":1,"103":1,"109":1,"115":1,"118":1}}],["n本文",{"2":{"106":1}}],["n$",{"2":{"103":1,"106":2,"109":1}}],["note",{"2":{"97":1}}],["notifiers",{"2":{"70":2}}],["notifier",{"2":{"70":7,"73":1}}],["notificationserviceの中身を書き換える必要がある",{"2":{"66":1}}],["notificationservice",{"2":{"65":1,"67":1,"70":1,"73":1}}],["notifyall",{"2":{"70":1,"73":1}}],["notify",{"2":{"65":1,"67":2}}],["ng",{"2":{"45":1,"48":1}}],["nubmer",{"2":{"44":1,"45":1,"47":1,"48":1}}],["number",{"2":{"4":2,"6":1,"9":4,"37":3,"52":8,"58":9,"91":6}}],["new",{"2":{"4":1,"18":2,"20":1,"31":1,"38":2,"52":2,"54":2,"58":2,"67":1,"73":4,"111":4,"119":5}}],["=1人のアクター",{"2":{"97":1}}],["===",{"2":{"47":2,"48":1,"65":3,"81":2}}],["=>",{"2":{"37":1,"38":3,"52":2,"54":3,"58":2,"70":1}}],["=",{"2":{"4":1,"20":1,"25":1,"31":1,"37":1,"38":2,"47":1,"52":6,"54":2,"58":10,"67":1,"73":1,"81":3,"85":3,"94":1,"106":2,"111":4,"119":5}}],["`送信",{"2":{"115":1,"118":1}}],["`保存",{"2":{"115":1,"118":1}}],["`新メール仕様で送信",{"2":{"106":1}}],["`件名",{"2":{"106":1}}],["`ファイル保存",{"2":{"103":1,"106":1,"109":1}}],["`印刷",{"2":{"103":1,"106":1,"109":1,"115":1,"118":1}}],["`ポイント付与",{"2":{"94":1}}],["`fax送信",{"2":{"73":1}}],["`プッシュ通知",{"2":{"65":1,"70":1}}],["`sms送信",{"2":{"65":1,"70":1}}],["`メール送信",{"2":{"65":1,"70":1,"103":1,"109":1}}],["`paypalで$",{"2":{"6":1,"9":1}}],["`",{"2":{"4":1,"6":1,"9":2,"65":3,"70":3,"73":1,"103":2,"106":3,"109":2,"115":4,"118":4}}],["`クレジットカードで$",{"2":{"4":1,"9":1}}],["円支払いました",{"2":{"4":1,"6":1,"9":2}}],["craftsman",{"2":{"143":1}}],["credit",{"2":{"81":1}}],["creditcardpayment",{"2":{"2":1,"4":2,"5":1,"9":1,"88":1}}],["change",{"2":{"98":1}}],["c",{"2":{"97":1,"98":1,"136":1,"143":3}}],["caution",{"2":{"97":1}}],["calculatepoints",{"2":{"81":1,"85":1,"91":3,"94":1}}],["com",{"2":{"106":1}}],["completeorder",{"2":{"94":1}}],["content",{"2":{"103":2,"106":3,"109":2}}],["const",{"2":{"31":1,"37":1,"38":2,"52":2,"54":2,"58":4,"73":1,"94":1,"106":2,"111":3,"119":4}}],["constructor",{"2":{"9":1,"58":2,"70":1,"88":1,"94":1,"103":1,"106":1,"109":1,"118":4}}],["console",{"2":{"4":1,"6":1,"9":2,"18":4,"23":4,"29":1,"34":1,"52":2,"58":1,"65":3,"70":3,"73":1,"81":3,"88":3,"94":1,"103":3,"106":3,"109":3,"115":4,"118":4}}],["clean",{"2":{"143":1}}],["closed",{"0":{"60":1},"1":{"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1}}],["class",{"2":{"4":1,"9":3,"18":2,"23":2,"29":2,"34":3,"52":2,"58":2,"70":4,"85":3,"88":4,"91":2,"98":1,"106":1,"109":3,"118":4}}],["void",{"2":{"4":2,"6":1,"9":4,"18":3,"23":3,"29":1,"34":2,"70":4,"73":1,"88":4,"122":3}}],["patterns",{"2":{"143":1}}],["paypal処理",{"2":{"88":1}}],["paypalpayment",{"2":{"6":1,"9":1,"88":1}}],["paymentprocessor",{"2":{"85":1,"88":1,"94":3}}],["paymenttype",{"2":{"81":3,"85":1}}],["paymentmethod",{"2":{"9":4,"10":1,"88":7}}],["payment",{"2":{"4":2,"9":2}}],["pay",{"2":{"4":2,"6":1,"9":4}}],["public",{"2":{"109":2,"118":1}}],["pushnotifier",{"2":{"70":1}}],["push",{"2":{"65":1}}],["pt`",{"2":{"94":1}}],["points",{"2":{"94":2}}],["pointscalculator",{"2":{"85":1,"91":3,"94":3}}],["penguin",{"2":{"27":1,"29":1,"30":2,"31":4,"34":1}}],["practices",{"2":{"143":1}}],["premiumcustomerpoints",{"2":{"91":1}}],["process",{"2":{"88":5}}],["processpayment",{"2":{"81":1,"85":1,"88":1,"94":1}}],["processorder",{"2":{"4":1,"9":1}}],["printable",{"2":{"122":1}}],["printer",{"2":{"20":2,"23":3,"109":1,"111":3,"118":1,"119":3}}],["print",{"2":{"18":3,"23":3,"103":1,"104":1,"106":1,"109":1,"111":1,"115":1,"118":1,"119":1,"122":1}}],["principles",{"2":{"143":3}}],["principle",{"0":{"0":1,"14":1,"24":1,"60":1,"96":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1},"2":{"97":1}}],["private",{"2":{"4":1,"9":1,"58":3,"70":1,"88":1,"94":3,"103":2,"106":2,"115":1,"118":3}}],["に特化しているか",{"2":{"134":1}}],["にもつながります",{"2":{"122":1}}],["にも影響する",{"2":{"106":1}}],["にも関係します",{"2":{"105":1}}],["によって提唱された概念ですが",{"2":{"97":1}}],["に対してのみ責任を持つ",{"2":{"97":1}}],["に対して責任を持つべき",{"2":{"97":1,"136":1}}],["に対して責任を持つべきという原則です",{"2":{"97":1}}],["に違反している状態",{"2":{"67":1}}],["に依存しているか",{"2":{"135":1}}],["に依存できるようになります",{"2":{"23":1}}],["に依存すべきである",{"2":{"1":1}}],["に依存すべき",{"2":{"1":1}}],["に強く依存しており",{"2":{"5":1}}],["に直接依存している場合を考えます",{"2":{"2":1}}],["が他の処理",{"2":{"106":1}}],["が",{"2":{"2":1,"5":1,"31":1,"97":1}}],["抽象クラス",{"2":{"135":1}}],["抽象に依存することで",{"2":{"75":1}}],["抽象に依存する",{"0":{"7":1},"1":{"8":1,"9":1,"10":1}}],["抽象",{"2":{"1":3,"74":1,"132":1}}]],"serializationVersion":2}';export{i as default};
