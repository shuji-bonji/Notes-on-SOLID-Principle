import{_ as r,C as d,c as E,o as l,a2 as e,b as t,j as a,w as i,a as n,G as p,a3 as k}from"./chunks/framework.M5Qft685.js";const u=JSON.parse('{"title":"依存性逆転の原則 (Dependency Inversion Principle)","description":"","frontmatter":{},"headers":[],"relativePath":"dependency-inversion-principle.md","filePath":"dependency-inversion-principle.md"}'),y={name:"dependency-inversion-principle.md"};function o(g,s,c,F,A,m){const h=d("Mermaid");return l(),E("div",null,[s[3]||(s[3]=e('<h1 id="依存性逆転の原則-dependency-inversion-principle" tabindex="-1">依存性逆転の原則 (Dependency Inversion Principle) <a class="header-anchor" href="#依存性逆転の原則-dependency-inversion-principle" aria-label="Permalink to &quot;依存性逆転の原則 (Dependency Inversion Principle)&quot;">​</a></h1><h2 id="依存性逆転の原則とは" tabindex="-1">依存性逆転の原則とは <a class="header-anchor" href="#依存性逆転の原則とは" aria-label="Permalink to &quot;依存性逆転の原則とは&quot;">​</a></h2><ul><li>上位のモジュールは下位モジュールに依存してはならない。どちらもモジュール「抽象」に依存すべき</li><li>「抽象」は実装の詳細に依存してはならない。実装の詳細が「抽象」に依存すべきである</li></ul><h2 id="依存性逆転の原則に違反している例" tabindex="-1">依存性逆転の原則に違反している例 <a class="header-anchor" href="#依存性逆転の原則に違反している例" aria-label="Permalink to &quot;依存性逆転の原則に違反している例&quot;">​</a></h2><p>たとえば、<code>OrderService</code> が <code>CreditCardPayment</code> に直接依存している場合を考えます。</p><h4 id="クラス図" tabindex="-1">クラス図 <a class="header-anchor" href="#クラス図" aria-label="Permalink to &quot;クラス図&quot;">​</a></h4>',6)),(l(),t(k,null,{default:i(()=>[p(h,{id:"mermaid-27",class:"mermaid",graph:"classDiagram%0A%20%20class%20CreditCardPayment%20%7B%0A%20%20%20%20%2Bpay(amount%3A%20number)%0A%20%20%7D%0A%0A%20%20class%20OrderService%20%7B%0A%20%20%20%20-payment%3A%20CreditCardPayment%0A%20%20%20%20%2BprocessOrder(amount%3A%20number)%0A%20%20%7D%0A%0A%20%20OrderService%20--%3E%20CreditCardPayment%20%3A%20depends%20on%0A"})]),fallback:i(()=>s[0]||(s[0]=[n(" Loading... ")])),_:1})),s[4]||(s[4]=e(`<h4 id="コード" tabindex="-1">コード <a class="header-anchor" href="#コード" aria-label="Permalink to &quot;コード&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreditCardPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`クレジットカードで\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}円支払いました。\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OrderService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> payment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreditCardPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  processOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.payment.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(amount);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="❌-問題点" tabindex="-1">❌ 問題点 <a class="header-anchor" href="#❌-問題点" aria-label="Permalink to &quot;❌ 問題点&quot;">​</a></h3><ul><li><code>OrderService</code> が <code>CreditCardPayment</code> に強く依存しており、他の支払い方法を使いたくなったときに書き換えが必要になる</li><li>単体テスト時に支払い部分を差し替えられない</li></ul><h2 id="原則に違反するとどうなるか" tabindex="-1">原則に違反するとどうなるか <a class="header-anchor" href="#原則に違反するとどうなるか" aria-label="Permalink to &quot;原則に違反するとどうなるか&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PayPalPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`PayPalで\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}円支払いました。\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// OrderService 側で直接PayPalPaymentに書き換える必要がある</span></span></code></pre></div><h2 id="解決策-抽象に依存する" tabindex="-1">解決策：抽象に依存する <a class="header-anchor" href="#解決策-抽象に依存する" aria-label="Permalink to &quot;解決策：抽象に依存する&quot;">​</a></h2><h4 id="クラス図-1" tabindex="-1">クラス図 <a class="header-anchor" href="#クラス図-1" aria-label="Permalink to &quot;クラス図&quot;">​</a></h4>`,8)),(l(),t(k,null,{default:i(()=>[p(h,{id:"mermaid-57",class:"mermaid",graph:"classDiagram%0A%20%20class%20PaymentMethod%20%7B%0A%20%20%20%20%3C%3Cinterface%3E%3E%0A%20%20%20%20%2Bpay(amount%3A%20number)%0A%20%20%7D%0A%0A%20%20class%20CreditCardPayment%20%7B%0A%20%20%20%20%2Bpay(amount%3A%20number)%0A%20%20%7D%0A%0A%20%20class%20PayPalPayment%20%7B%0A%20%20%20%20%2Bpay(amount%3A%20number)%0A%20%20%7D%0A%0A%20%20class%20OrderService%20%7B%0A%20%20%20%20-payment%3A%20PaymentMethod%0A%20%20%20%20%2BprocessOrder(amount%3A%20number)%0A%20%20%7D%0A%0A%20%20PaymentMethod%20%3C%7C..%20CreditCardPayment%0A%20%20PaymentMethod%20%3C%7C..%20PayPalPayment%0A%20%20OrderService%20--%3E%20PaymentMethod%20%3A%20depends%20on%0A"})]),fallback:i(()=>s[1]||(s[1]=[n(" Loading... ")])),_:1})),s[5]||(s[5]=e(`<h4 id="コード-1" tabindex="-1">コード <a class="header-anchor" href="#コード-1" aria-label="Permalink to &quot;コード&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreditCardPayment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`クレジットカードで\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}円支払いました。\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PayPalPayment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`PayPalで\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}円支払いました。\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OrderService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> payment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  processOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.payment.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(amount);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="✅-利点" tabindex="-1">✅ 利点 <a class="header-anchor" href="#✅-利点" aria-label="Permalink to &quot;✅ 利点&quot;">​</a></h3><ul><li><code>OrderService</code> は <code>PaymentMethod</code> という抽象に依存しているので、他の支払い手段を自由に差し替えられる</li><li>テスト時には <code>MockPayment</code> を注入することで柔軟なテストが可能</li></ul><h2 id="他のsolid原則との関連" tabindex="-1">他のSOLID原則との関連 <a class="header-anchor" href="#他のsolid原則との関連" aria-label="Permalink to &quot;他のSOLID原則との関連&quot;">​</a></h2><h4 id="関連図" tabindex="-1">関連図 <a class="header-anchor" href="#関連図" aria-label="Permalink to &quot;関連図&quot;">​</a></h4>`,6)),(l(),t(k,null,{default:i(()=>[p(h,{id:"mermaid-83",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20L%5B%E3%83%AA%E3%82%B9%E3%82%B3%E3%83%95%E3%81%AE%E7%BD%AE%E6%8F%9B%E5%8E%9F%E5%89%87%5D%20--%3E%20D%0A%20%20%20%20L%20--%3E%20O%0A%20%20%20%20D%5B%E4%BE%9D%E5%AD%98%E6%80%A7%E9%80%86%E8%BB%A2%E3%81%AE%E5%8E%9F%E5%89%87%5D%20--%3E%20O%5B%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%AF%E3%83%AD%E3%83%BC%E3%82%BA%E3%83%89%E3%81%AE%E5%8E%9F%E5%89%87%5D%0A%20%20%20%20subgraph%20%22%E7%96%8E%E7%B5%90%E5%90%88%22%0A%20%20%20%20%20%20%20%20D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20%22%E6%8B%A1%E5%BC%B5%E6%80%A7%22%0A%20%20%20%20%20%20%20%20O%0A%20%20%20%20%20%20%20%20L%0A%20%20%20%20end%0A"})]),fallback:i(()=>s[2]||(s[2]=[n(" Loading... ")])),_:1})),s[6]||(s[6]=a("ul",null,[a("li",null,[a("strong",null,"オープンクローズドの原則"),n(" では、機能拡張時に既存コードを変更せずに済むことが重要ですが、DIPによって依存先を抽象化することで、その前提を作ることができます。")]),a("li",null,[a("strong",null,"リスコフの置換原則"),n(" を満たしていることで、DIPで注入された具体クラスが安全に置き換え可能となり、システムの安定性が保たれます。")])],-1))])}const B=r(y,[["render",o]]);export{u as __pageData,B as default};
